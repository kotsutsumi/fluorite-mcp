{
  "items": [
    { "id": "strike-fastapi-async-sqlalchemy-asyncpg", "name": "FastAPI + SQLAlchemy AsyncPG", "stack": ["python","fastapi","sqlalchemy"], "tags": ["backend","db"], "files": [{ "path": "app/db.py", "template": "# fastapi sqlalchemy asyncpg skeleton\n" }] },
    { "id": "strike-fastapi-file-upload-types", "name": "FastAPI File Upload Types", "stack": ["python","fastapi"], "tags": ["backend","upload"], "files": [{ "path": "app/upload.py", "template": "# fastapi file upload types skeleton\n" }] },
    { "id": "strike-fastapi-cache-dependencies", "name": "FastAPI Cached Dependencies", "stack": ["python","fastapi"], "tags": ["backend","perf"], "files": [{ "path": "app/deps.py", "template": "# cached dependencies skeleton\n" }] },
    { "id": "strike-fastapi-sse-stream", "name": "FastAPI SSE Stream", "stack": ["python","fastapi"], "tags": ["backend","sse"], "files": [{ "path": "app/sse.py", "template": "# sse stream skeleton\n" }] },
    { "id": "strike-fastapi-websocket-broadcast", "name": "FastAPI WebSocket Broadcast", "stack": ["python","fastapi"], "tags": ["backend","ws"], "files": [{ "path": "app/ws.py", "template": "# websocket broadcast skeleton\n" }] },

    { "id": "strike-flask-blueprints-minimal", "name": "Flask Blueprints Minimal", "stack": ["python","flask"], "tags": ["backend"], "files": [{ "path": "app/__init__.py", "template": "# flask blueprints skeleton\n" }] },
    { "id": "strike-flask-jwt-extended", "name": "Flask JWT-Extended", "stack": ["python","flask","jwt"], "tags": ["auth"], "files": [{ "path": "app/auth.py", "template": "# flask jwt-extended skeleton\n" }] },
    { "id": "strike-flask-socketio-chat", "name": "Flask-SocketIO Chat", "stack": ["python","flask","socketio"], "tags": ["realtime"], "files": [{ "path": "app/socket.py", "template": "# flask socketio chat skeleton\n" }] },
    { "id": "strike-flask-caching-redis", "name": "Flask Caching with Redis", "stack": ["python","flask","redis"], "tags": ["perf"], "files": [{ "path": "app/cache.py", "template": "# flask caching redis skeleton\n" }] },
    { "id": "strike-flask-openapi-spec", "name": "Flask OpenAPI Spec", "stack": ["python","flask","openapi"], "tags": ["api"], "files": [{ "path": "app/openapi.py", "template": "# flask openapi spec skeleton\n" }] },

    { "id": "strike-django-middleware-logging", "name": "Django Middleware Logging", "stack": ["python","django"], "tags": ["backend","logs"], "files": [{ "path": "project/middleware.py", "template": "# django logging middleware skeleton\n" }] },
    { "id": "strike-django-signal-post-save", "name": "Django Signal post_save", "stack": ["python","django"], "tags": ["backend","signals"], "files": [{ "path": "app/signals.py", "template": "# django post_save signal skeleton\n" }] },
    { "id": "strike-django-celery-beat", "name": "Django Celery Beat", "stack": ["python","django","celery"], "tags": ["tasks"], "files": [{ "path": "celery.py", "template": "# django celery beat skeleton\n" }] },
    { "id": "strike-django-drf-throttle", "name": "DRF Throttling", "stack": ["python","django","drf"], "tags": ["api","throttle"], "files": [{ "path": "app/throttle.py", "template": "# drf throttle skeleton\n" }] },
    { "id": "strike-django-drf-pagination", "name": "DRF Pagination", "stack": ["python","django","drf"], "tags": ["api"], "files": [{ "path": "app/pagination.py", "template": "# drf pagination skeleton\n" }] },

    { "id": "strike-pandas-groupby-aggregate", "name": "Pandas GroupBy Aggregate", "stack": ["python","pandas"], "tags": ["data"], "files": [{ "path": "pandas/groupby.py", "template": "# pandas groupby aggregate skeleton\n" }] },
    { "id": "strike-pandas-pivot-table", "name": "Pandas Pivot Table", "stack": ["python","pandas"], "tags": ["data"], "files": [{ "path": "pandas/pivot.py", "template": "# pandas pivot skeleton\n" }] },
    { "id": "strike-pandas-timeseries-resample", "name": "Pandas TimeSeries Resample", "stack": ["python","pandas"], "tags": ["data","timeseries"], "files": [{ "path": "pandas/resample.py", "template": "# pandas resample skeleton\n" }] },
    { "id": "strike-polars-lazy-scan-parquet", "name": "Polars Lazy Scan Parquet", "stack": ["python","polars"], "tags": ["data"], "files": [{ "path": "polars/scan.py", "template": "# polars lazy scan parquet skeleton\n" }] },
    { "id": "strike-polars-streaming-csv", "name": "Polars Streaming CSV", "stack": ["python","polars"], "tags": ["data"], "files": [{ "path": "polars/stream.py", "template": "# polars streaming csv skeleton\n" }] },
    { "id": "strike-pyarrow-table-to-parquet", "name": "PyArrow Table to Parquet", "stack": ["python","pyarrow"], "tags": ["data"], "files": [{ "path": "pyarrow/write_parquet.py", "template": "# pyarrow write parquet skeleton\n" }] },

    { "id": "strike-sklearn-pipeline-gridsearch", "name": "sklearn Pipeline + GridSearch", "stack": ["python","sklearn"], "tags": ["ml"], "files": [{ "path": "ml/gridsearch.py", "template": "# sklearn pipeline gridsearch skeleton\n" }] },
    { "id": "strike-xgboost-classifier-basic", "name": "XGBoost Classifier Basic", "stack": ["python","xgboost"], "tags": ["ml"], "files": [{ "path": "ml/xgb.py", "template": "# xgboost classifier skeleton\n" }] },
    { "id": "strike-lightgbm-regressor-basic", "name": "LightGBM Regressor Basic", "stack": ["python","lightgbm"], "tags": ["ml"], "files": [{ "path": "ml/lgbm.py", "template": "# lightgbm regressor skeleton\n" }] },
    { "id": "strike-pytorch-lightning-train-loop", "name": "PyTorch Lightning Train Loop", "stack": ["python","pytorch"], "tags": ["ml"], "files": [{ "path": "ml/pl_train.py", "template": "# pytorch lightning skeleton\n" }] },
    { "id": "strike-transformers-text-generation", "name": "Transformers Text Generation", "stack": ["python","transformers"], "tags": ["ml","nlp"], "files": [{ "path": "ml/generate.py", "template": "# transformers text generation skeleton\n" }] },
    { "id": "strike-openai-function-calling", "name": "OpenAI Function Calling", "stack": ["python","openai"], "tags": ["ml","ai"], "files": [{ "path": "ai/openai_functions.py", "template": "# openai function calling skeleton\n" }] },
    { "id": "strike-vllm-server-infer", "name": "vLLM Server Inference", "stack": ["python","vllm"], "tags": ["ml"], "files": [{ "path": "ai/vllm_infer.py", "template": "# vllm inference skeleton\n" }] },
    { "id": "strike-llamacpp-python-bindings", "name": "llama.cpp Python Bindings", "stack": ["python","llama-cpp"], "tags": ["ml"], "files": [{ "path": "ai/llamacpp.py", "template": "# llama.cpp bindings skeleton\n" }] },
    { "id": "strike-ollama-client-basic", "name": "Ollama Client Basic", "stack": ["python","ollama"], "tags": ["ml"], "files": [{ "path": "ai/ollama_client.py", "template": "# ollama client skeleton\n" }] },
    { "id": "strike-modal-function-deploy", "name": "Modal Function Deploy", "stack": ["python","modal"], "tags": ["ml","serverless"], "files": [{ "path": "modal/app.py", "template": "# modal function deploy skeleton\n" }] },

    { "id": "strike-express-rate-limit-slowdown", "name": "Express Rate Limit + SlowDown", "stack": ["node","express"], "tags": ["backend","throttle"], "files": [{ "path": "rate.js", "template": "// express rate+slow skeleton\n" }] },
    { "id": "strike-koa-router-jwt-guard", "name": "Koa Router JWT Guard", "stack": ["node","koa","jwt"], "tags": ["backend","auth"], "files": [{ "path": "server.js", "template": "// koa jwt guard skeleton\n" }] },
    { "id": "strike-hono-openapi-route", "name": "Hono OpenAPI Route", "stack": ["node","hono","openapi"], "tags": ["backend","api"], "files": [{ "path": "app.ts", "template": "// hono openapi skeleton\n" }] },
    { "id": "strike-nestjs-interceptor-logging", "name": "NestJS Logging Interceptor", "stack": ["node","nestjs"], "tags": ["backend","logs"], "files": [{ "path": "src/logging.interceptor.ts", "template": "// nestjs logging interceptor skeleton\n" }] },
    { "id": "strike-nestjs-guard-roles", "name": "NestJS Roles Guard", "stack": ["node","nestjs"], "tags": ["backend","auth"], "files": [{ "path": "src/roles.guard.ts", "template": "// nestjs roles guard skeleton\n" }] },
    { "id": "strike-nestjs-pipe-zod-validate", "name": "NestJS Pipe Zod Validate", "stack": ["node","nestjs","zod"], "tags": ["validation"], "files": [{ "path": "src/zod.pipe.ts", "template": "// nestjs zod pipe skeleton\n" }] },
    { "id": "strike-trpc-router-minimal", "name": "tRPC Router Minimal", "stack": ["node","trpc"], "tags": ["backend","rpc"], "files": [{ "path": "src/router.ts", "template": "// trpc router skeleton\n" }] },
    { "id": "strike-drizzle-sqlite-schema", "name": "Drizzle ORM SQLite Schema", "stack": ["node","drizzle","sqlite"], "tags": ["db"], "files": [{ "path": "db/schema.ts", "template": "// drizzle sqlite schema skeleton\n" }] },
    { "id": "strike-drizzle-postgres-schema", "name": "Drizzle ORM Postgres Schema", "stack": ["node","drizzle","postgres"], "tags": ["db"], "files": [{ "path": "db/schema.ts", "template": "// drizzle pg schema skeleton\n" }] },
    { "id": "strike-kysely-typescript-setup", "name": "Kysely TypeScript Setup", "stack": ["node","kysely"], "tags": ["db"], "files": [{ "path": "db/kysely.ts", "template": "// kysely setup skeleton\n" }] },

    { "id": "strike-postgres-trigger-audit", "name": "Postgres Trigger Audit", "stack": ["sql","postgres"], "tags": ["db","audit"], "files": [{ "path": "sql/audit.sql", "template": "-- pg audit trigger skeleton\n" }] },
    { "id": "strike-postgres-partitioning-range", "name": "Postgres Range Partitioning", "stack": ["sql","postgres"], "tags": ["db","perf"], "files": [{ "path": "sql/partition.sql", "template": "-- pg range partition skeleton\n" }] },
    { "id": "strike-mysql-event-scheduler", "name": "MySQL Event Scheduler", "stack": ["sql","mysql"], "tags": ["db","jobs"], "files": [{ "path": "sql/event.sql", "template": "-- mysql event scheduler skeleton\n" }] },
    { "id": "strike-sqlite-fts5-search", "name": "SQLite FTS5 Search", "stack": ["sql","sqlite"], "tags": ["db","search"], "files": [{ "path": "sql/fts5.sql", "template": "-- sqlite fts5 skeleton\n" }] },
    { "id": "strike-duckdb-query-parquet", "name": "DuckDB Query Parquet", "stack": ["sql","duckdb"], "tags": ["db"], "files": [{ "path": "sql/duckdb_parquet.sql", "template": "-- duckdb parquet skeleton\n" }] },

    { "id": "strike-redis-streams-consumer-group", "name": "Redis Streams Consumer Group", "stack": ["redis"], "tags": ["queue"], "files": [{ "path": "redis/streams.md", "template": "# redis streams consumer group skeleton\n" }] },
    { "id": "strike-kafka-connect-jdbc-source", "name": "Kafka Connect JDBC Source", "stack": ["kafka"], "tags": ["ingest"], "files": [{ "path": "kafka/connect-jdbc.json", "template": "{ }\n" }] },
    { "id": "strike-debezium-postgres-source", "name": "Debezium Postgres Source", "stack": ["kafka","debezium"], "tags": ["cdc"], "files": [{ "path": "kafka/debezium.json", "template": "{ }\n" }] },
    { "id": "strike-rabbitmq-dlx-setup", "name": "RabbitMQ DLX Setup", "stack": ["rabbitmq"], "tags": ["queue"], "files": [{ "path": "rabbitmq/dlx.md", "template": "# rabbitmq dlx skeleton\n" }] },

    { "id": "strike-aws-eventbridge-schedule", "name": "AWS EventBridge Schedule", "stack": ["aws","eventbridge"], "tags": ["cloud","jobs"], "files": [{ "path": "aws/eventbridge-schedule.json", "template": "{ }\n" }] },
    { "id": "strike-aws-stepfunctions-asl", "name": "AWS Step Functions ASL", "stack": ["aws","stepfunctions"], "tags": ["cloud","workflow"], "files": [{ "path": "aws/sfn.asl.json", "template": "{ }\n" }] },
    { "id": "strike-aws-sam-http-api", "name": "AWS SAM HTTP API", "stack": ["aws","sam"], "tags": ["cloud","serverless"], "files": [{ "path": "template.yaml", "template": "# sam http api skeleton\n" }] },
    { "id": "strike-aws-cdktf-basic", "name": "CDK for Terraform Basic", "stack": ["aws","cdktf"], "tags": ["infra"], "files": [{ "path": "infra/main.ts", "template": "// cdktf skeleton\n" }] },
    { "id": "strike-gcp-pubsub-push-handler", "name": "GCP Pub/Sub Push Handler", "stack": ["gcp","pubsub"], "tags": ["cloud","events"], "files": [{ "path": "functions/pubsub.ts", "template": "// pubsub push handler skeleton\n" }] },
    { "id": "strike-gcp-cloud-run-hello", "name": "GCP Cloud Run Hello", "stack": ["gcp","cloud-run"], "tags": ["cloud"], "files": [{ "path": "Dockerfile", "template": "# cloud run dockerfile skeleton\n" }] },
    { "id": "strike-firebase-functions-http", "name": "Firebase Functions HTTP", "stack": ["firebase","functions"], "tags": ["serverless"], "files": [{ "path": "functions/index.ts", "template": "// firebase function http skeleton\n" }] },
    { "id": "strike-supabase-row-level-security", "name": "Supabase Row Level Security", "stack": ["supabase","postgres"], "tags": ["db","security"], "files": [{ "path": "supabase/policies.sql", "template": "-- rls policy skeleton\n" }] },
    { "id": "strike-vercel-route-config-json", "name": "Vercel Route Config JSON", "stack": ["vercel"], "tags": ["deploy"], "files": [{ "path": "vercel.json", "template": "{ }\n" }] },
    { "id": "strike-netlify-edge-function", "name": "Netlify Edge Function", "stack": ["netlify"], "tags": ["serverless","edge"], "files": [{ "path": "netlify/edge.ts", "template": "// netlify edge function skeleton\n" }] },

    { "id": "strike-otel-node-instrumentation", "name": "OTel Node Instrumentation", "stack": ["opentelemetry","node"], "tags": ["observability"], "files": [{ "path": "otel/node.ts", "template": "// otel node instrumentation skeleton\n" }] },
    { "id": "strike-otel-python-instrumentation", "name": "OTel Python Instrumentation", "stack": ["opentelemetry","python"], "tags": ["observability"], "files": [{ "path": "otel/python.py", "template": "# otel python instrumentation skeleton\n" }] },
    { "id": "strike-otel-java-autoconfigure", "name": "OTel Java Autoconfigure", "stack": ["opentelemetry","java"], "tags": ["observability"], "files": [{ "path": "otel/java.md", "template": "# otel java autoconfigure skeleton\n" }] },
    { "id": "strike-jaeger-docker-compose", "name": "Jaeger Docker Compose", "stack": ["jaeger","docker"], "tags": ["observability"], "files": [{ "path": "docker-compose.yml", "template": "# jaeger compose skeleton\n" }] },
    { "id": "strike-prometheus-alert-rules", "name": "Prometheus Alert Rules", "stack": ["prometheus"], "tags": ["observability"], "files": [{ "path": "prometheus/alerts.yml", "template": "# prometheus alert rules skeleton\n" }] },

    { "id": "strike-security-csp-headers", "name": "Security CSP Headers", "stack": ["security","http"], "tags": ["security"], "files": [{ "path": "security/csp.md", "template": "# csp headers skeleton\n" }] },
    { "id": "strike-security-sops-age-encrypt", "name": "SOPS + age Encryption", "stack": ["security","sops"], "tags": ["security","secrets"], "files": [{ "path": "security/sops.md", "template": "# sops encrypt skeleton\n" }] },
    { "id": "strike-sigstore-cosign-sign-image", "name": "Sigstore Cosign Sign Image", "stack": ["sigstore","cosign"], "tags": ["security","supply-chain"], "files": [{ "path": "cosign/sign.md", "template": "# cosign sign image skeleton\n" }] },

    { "id": "strike-react-query-basic", "name": "React Query Basic", "stack": ["react","tanstack-query"], "tags": ["frontend","data"], "files": [{ "path": "src/query.ts", "template": "// react query skeleton\n" }] },
    { "id": "strike-zustand-global-store", "name": "Zustand Global Store", "stack": ["react","zustand"], "tags": ["frontend","state"], "files": [{ "path": "src/store.ts", "template": "// zustand store skeleton\n" }] },
    { "id": "strike-shadcn-ui-setup", "name": "shadcn/ui Setup", "stack": ["react","shadcn"], "tags": ["frontend","ui"], "files": [{ "path": "ui/notes.md", "template": "# shadcn ui setup skeleton\n" }] },
    { "id": "strike-tailwind-config-basic", "name": "Tailwind Config Basic", "stack": ["tailwind"], "tags": ["frontend","css"], "files": [{ "path": "tailwind.config.js", "template": "// tailwind config skeleton\n" }] },
    { "id": "strike-nextjs-server-actions", "name": "Next.js Server Actions", "stack": ["nextjs"], "tags": ["frontend","server-actions"], "files": [{ "path": "app/actions.ts", "template": "// nextjs server actions skeleton\n" }] },
    { "id": "strike-nextjs-rsc-streaming", "name": "Next.js RSC Streaming", "stack": ["nextjs"], "tags": ["frontend","stream"], "files": [{ "path": "app/stream/page.tsx", "template": "// rsc streaming skeleton\n" }] },
    { "id": "strike-astro-collections-mdx", "name": "Astro Content Collections + MDX", "stack": ["astro"], "tags": ["frontend","content"], "files": [{ "path": "src/content/config.ts", "template": "// astro collections skeleton\n" }] },
    { "id": "strike-remix-fetcher-form", "name": "Remix Fetcher + Form", "stack": ["remix"], "tags": ["frontend","forms"], "files": [{ "path": "app/routes/form.tsx", "template": "// remix fetcher form skeleton\n" }] },
    { "id": "strike-sveltekit-endpoints-stream", "name": "SvelteKit Endpoints Streaming", "stack": ["sveltekit"], "tags": ["frontend","stream"], "files": [{ "path": "src/routes/stream/+server.ts", "template": "// sveltekit streaming skeleton\n" }] },
    { "id": "strike-angular-standalone-signals", "name": "Angular Standalone + Signals", "stack": ["angular"], "tags": ["frontend"], "files": [{ "path": "src/app/app.component.ts", "template": "// angular signals skeleton\n" }] },
    { "id": "strike-vue-pinia-store", "name": "Vue + Pinia Store", "stack": ["vue","pinia"], "tags": ["frontend","state"], "files": [{ "path": "src/stores/counter.ts", "template": "// pinia store skeleton\n" }] },

    { "id": "strike-jest-setup-files-ts", "name": "Jest Setup Files TS", "stack": ["jest","typescript"], "tags": ["test"], "files": [{ "path": "jest.setup.ts", "template": "// jest setup skeleton\n" }] },
    { "id": "strike-vitest-mock-fetch", "name": "Vitest Mock fetch", "stack": ["vitest","typescript"], "tags": ["test"], "files": [{ "path": "test/setup.ts", "template": "// vitest mock fetch skeleton\n" }] },
    { "id": "strike-playwright-network-mocking", "name": "Playwright Network Mocking", "stack": ["playwright"], "tags": ["test"], "files": [{ "path": "tests/mock.spec.ts", "template": "// playwright network mock skeleton\n" }] },
    { "id": "strike-cypress-tasks-plugin", "name": "Cypress Tasks Plugin", "stack": ["cypress"], "tags": ["test"], "files": [{ "path": "cypress/plugins/index.js", "template": "// cypress tasks plugin skeleton\n" }] },

    { "id": "strike-github-actions-cache-node", "name": "GitHub Actions Cache Node", "stack": ["github","actions"], "tags": ["ci"], "files": [{ "path": ".github/workflows/cache-node.yml", "template": "name: CacheNode\non: [push]\n" }] },
    { "id": "strike-github-actions-matrix-os-node", "name": "GH Actions Matrix OS/Node", "stack": ["github","actions"], "tags": ["ci"], "files": [{ "path": ".github/workflows/matrix.yml", "template": "name: Matrix\non: [push]\n" }] },
    { "id": "strike-dependabot-config-basic", "name": "Dependabot Config Basic", "stack": ["dependabot"], "tags": ["ci"], "files": [{ "path": ".github/dependabot.yml", "template": "# dependabot skeleton\n" }] },
    { "id": "strike-renovate-config-basic", "name": "Renovate Config Basic", "stack": ["renovate"], "tags": ["ci"], "files": [{ "path": "renovate.json", "template": "{ }\n" }] },

    { "id": "strike-docker-compose-postgres-adminer", "name": "Docker Compose Postgres + Adminer", "stack": ["docker","postgres"], "tags": ["infra"], "files": [{ "path": "docker-compose.yml", "template": "# postgres + adminer skeleton\n" }] },
    { "id": "strike-docker-compose-redis-cluster", "name": "Docker Compose Redis Cluster", "stack": ["docker","redis"], "tags": ["infra"], "files": [{ "path": "docker-compose.yml", "template": "# redis cluster skeleton\n" }] },
    { "id": "strike-nginx-reverse-proxy-basic", "name": "Nginx Reverse Proxy Basic", "stack": ["nginx"], "tags": ["infra"], "files": [{ "path": "nginx.conf", "template": "# nginx reverse proxy skeleton\n" }] },
    { "id": "strike-traefik-dynamic-config", "name": "Traefik Dynamic Config", "stack": ["traefik"], "tags": ["infra"], "files": [{ "path": "traefik/dynamic.yml", "template": "# traefik dynamic config skeleton\n" }] },
    { "id": "strike-caddyfile-basic-proxy", "name": "Caddyfile Basic Proxy", "stack": ["caddy"], "tags": ["infra"], "files": [{ "path": "Caddyfile", "template": "# caddy proxy skeleton\n" }] },
    { "id": "strike-k8s-service-ingress", "name": "K8s Service + Ingress", "stack": ["kubernetes"], "tags": ["infra"], "files": [{ "path": "k8s/service-ingress.yaml", "template": "# k8s service+ingress skeleton\n" }] },
    { "id": "strike-kustomize-overlays-dev-prod", "name": "Kustomize Overlays Dev/Prod", "stack": ["kustomize"], "tags": ["infra"], "files": [{ "path": "k8s/overlays/dev/kustomization.yaml", "template": "# kustomize overlays skeleton\n" }] },
    { "id": "strike-helm-values-template", "name": "Helm Values Template", "stack": ["helm"], "tags": ["infra"], "files": [{ "path": "charts/app/values.yaml", "template": "# helm values skeleton\n" }] },

    { "id": "strike-nats-jetstream-consumer", "name": "NATS JetStream Consumer", "stack": ["nats"], "tags": ["messaging"], "files": [{ "path": "nats/consumer.md", "template": "# jetstream consumer skeleton\n" }] },
    { "id": "strike-kafka-streams-topology", "name": "Kafka Streams Topology", "stack": ["kafka","streams"], "tags": ["stream"], "files": [{ "path": "kafka/streams-topology.java", "template": "// kafka streams topology skeleton\n" }] },

    { "id": "strike-elasticsearch-index-settings", "name": "Elasticsearch Index Settings", "stack": ["elasticsearch"], "tags": ["search"], "files": [{ "path": "es/index_settings.json", "template": "{ }\n" }] },
    { "id": "strike-opensearch-index-template", "name": "OpenSearch Index Template", "stack": ["opensearch"], "tags": ["search"], "files": [{ "path": "os/index_template.json", "template": "{ }\n" }] },
    { "id": "strike-weaviate-schema-create", "name": "Weaviate Schema Create", "stack": ["weaviate"], "tags": ["vector"], "files": [{ "path": "weaviate/schema.json", "template": "{ }\n" }] },
    { "id": "strike-milvus-collection-basic", "name": "Milvus Collection Basic", "stack": ["milvus"], "tags": ["vector"], "files": [{ "path": "milvus/collection.py", "template": "# milvus collection skeleton\n" }] },

    { "id": "strike-sentry-node-setup", "name": "Sentry Node Setup", "stack": ["sentry","node"], "tags": ["observability"], "files": [{ "path": "sentry/node.ts", "template": "// sentry node setup skeleton\n" }] },
    { "id": "strike-sentry-python-setup", "name": "Sentry Python Setup", "stack": ["sentry","python"], "tags": ["observability"], "files": [{ "path": "sentry/python.py", "template": "# sentry python setup skeleton\n" }] },

    { "id": "strike-terraform-aws-vpc-minimal", "name": "Terraform AWS VPC Minimal", "stack": ["terraform","aws"], "tags": ["infra"], "files": [{ "path": "terraform/main.tf", "template": "# terraform vpc skeleton\n" }] },
    { "id": "strike-terraform-gcp-storage-bucket", "name": "Terraform GCP Storage Bucket", "stack": ["terraform","gcp"], "tags": ["infra"], "files": [{ "path": "terraform/main.tf", "template": "# terraform gcs bucket skeleton\n" }] },
    { "id": "strike-terraform-azure-storage-account", "name": "Terraform Azure Storage Account", "stack": ["terraform","azure"], "tags": ["infra"], "files": [{ "path": "terraform/main.tf", "template": "# terraform azure storage skeleton\n" }] }
  ]
}

