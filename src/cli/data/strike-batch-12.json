{
  "items": [
    { "id": "nextjs-route-error-normalizer-secure-advanced", "stack": ["nextjs"], "tags": ["api", "secure"], "files": [ { "path": "src/next/error-normalize.ts", "template": "export function normalize(e:unknown){ return { ok:false, error: String(e) }; }\n" } ] },
    { "id": "nextjs-action-zod-typed-response-advanced", "stack": ["nextjs", "zod"], "tags": ["server-actions", "secure"], "files": [ { "path": "app/actions/typed-response.ts", "template": "import { z } from 'zod';\nconst In = z.object({ name: z.string().min(1) });\nconst Out = z.object({ ok: z.literal(true), message: z.string() });\nexport async function action(input: unknown){ const v = In.parse(input); return Out.parse({ ok: true, message: `Hello ${v.name}` }); }\n" } ] },
    { "id": "nextjs-edge-rate-limit-fixed-window-secure", "stack": ["nextjs"], "tags": ["edge", "security"], "files": [ { "path": "src/edge/rate-fixed.ts", "template": "export async function allow(key:string){ return true }\n" } ] },
    { "id": "next-auth-azuread-enterprise-secure-advanced", "stack": ["next-auth"], "tags": ["auth", "enterprise"], "files": [ { "path": "src/auth/nextauth-azuread-enterprise.ts", "template": "export const enterprise = { tenantId: '', clientId: '', clientSecret: '' };\n" } ] },
    { "id": "clerk-mfa-totp-backup-codes-minimal", "stack": ["clerk"], "tags": ["auth", "mfa"], "files": [ { "path": "src/auth/clerk-backup-codes.ts", "template": "export const backupCodes = [];\n" } ] },
    { "id": "lucia-session-store-redis-secure", "stack": ["lucia", "redis"], "tags": ["auth", "secure"], "files": [ { "path": "src/auth/lucia-redis-store.ts", "template": "export const store = {};\n" } ] },
    { "id": "bullmq-worker-metrics-exporter-minimal", "stack": ["bullmq"], "tags": ["queue", "monitoring"], "files": [ { "path": "src/queue/metrics.ts", "template": "export const metrics = {};\n" } ] },
    { "id": "kafka-admin-topic-ops-minimal", "stack": ["kafkajs"], "tags": ["stream", "admin"], "files": [ { "path": "src/kafka/admin.ts", "template": "export const admin = {};\n" } ] },
    { "id": "rabbitmq-headers-exchange-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/headers-exchange.ts", "template": "export const headers = {};\n" } ] },
    { "id": "algolia-synonyms-curation-advanced", "stack": ["algolia"], "tags": ["search"], "files": [ { "path": "src/search/algolia-curation.ts", "template": "export const curation = [];\n" } ] },
    { "id": "meilisearch-typo-strategy-advanced", "stack": ["meilisearch"], "tags": ["search"], "files": [ { "path": "src/search/meili-typo-strategy.ts", "template": "export const strategy = {};\n" } ] },
    { "id": "typesense-multi-collection-search-advanced", "stack": ["typesense"], "tags": ["search"], "files": [ { "path": "src/search/typesense-multi.ts", "template": "export const multi = {};\n" } ] },
    { "id": "openai-guardrails-json-schema-secure", "stack": ["openai"], "tags": ["ai", "secure"], "files": [ { "path": "src/ai/openai-guardrails.ts", "template": "export async function guarded(){ return {}; }\n" } ] },
    { "id": "langchain-multi-vector-rag-advanced", "stack": ["langchain"], "tags": ["ai"], "files": [ { "path": "src/ai/multi-vector-rag.ts", "template": "export async function rag(){ return []; }\n" } ] },
    { "id": "pinecone-vector-delete-by-filter-advanced", "stack": ["pinecone"], "tags": ["vector"], "files": [ { "path": "src/vectors/pinecone-delete-filter.ts", "template": "export async function del(){ return true }\n" } ] },
    { "id": "qdrant-score-threshold-search-minimal", "stack": ["qdrant"], "tags": ["vector"], "files": [ { "path": "src/vectors/qdrant-threshold.ts", "template": "export const threshold = 0.5;\n" } ] },
    { "id": "weaviate-group-by-rerank-advanced", "stack": ["weaviate"], "tags": ["vector"], "files": [ { "path": "src/vectors/weaviate-groupby.ts", "template": "export const groupBy = {};\n" } ] },
    { "id": "milvus-dynamic-index-params-minimal", "stack": ["milvus"], "tags": ["vector"], "files": [ { "path": "src/vectors/milvus-index-params.ts", "template": "export const params = {};\n" } ] },
    { "id": "cloudflare-queues-do-pipeline-advanced", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "src/cloudflare/queues-do.ts", "template": "export const pipeline = {};\n" } ] },
    { "id": "cloudflare-security-headers-env-aware-secure", "stack": ["cloudflare-workers"], "tags": ["edge", "security"], "files": [ { "path": "src/cloudflare/security-env.ts", "template": "export const headers = {};\n" } ] },
    { "id": "axe-core-next-page-a11y-test-minimal", "stack": ["testing"], "tags": ["a11y"], "files": [ { "path": "src/test/axe-next.ts", "template": "export async function test(){ return true }\n" } ] },
    { "id": "lighthouse-performance-ci-minimal", "stack": ["testing"], "tags": ["performance"], "files": [ { "path": "lighthouse.ci.json", "template": "{ }\n" } ] },
    { "id": "storybook-a11y-rules-config-minimal", "stack": ["storybook"], "tags": ["testing", "a11y"], "files": [ { "path": ".storybook/a11y.ts", "template": "export default {};\n" } ] },
    { "id": "nextjs-route-signed-webhook-secure", "stack": ["nextjs"], "tags": ["api", "security"], "files": [ { "path": "app/api/webhook/route.ts", "template": "export async function POST(){ return Response.json({ ok:true }); }\n" } ] },
    { "id": "passport-oauth2-strategy-stub-minimal", "stack": ["passport"], "tags": ["auth"], "files": [ { "path": "src/auth/passport-oauth2.ts", "template": "export const oauth2 = {};\n" } ] },
    { "id": "auth0-action-post-login-stub-minimal", "stack": ["auth0"], "tags": ["auth"], "files": [ { "path": "src/auth/auth0-actions.ts", "template": "export const postLogin = {};\n" } ] },
    { "id": "prisma-partitioning-strategy-advanced", "stack": ["prisma"], "tags": ["db"], "files": [ { "path": "src/db/prisma-partition.ts", "template": "export const partition = {};\n" } ] },
    { "id": "drizzle-multi-db-connections-minimal", "stack": ["drizzle"], "tags": ["db"], "files": [ { "path": "src/db/drizzle-multi.ts", "template": "export const multi = {};\n" } ] },
    { "id": "knex-read-replica-config-minimal", "stack": ["knex"], "tags": ["db"], "files": [ { "path": "src/db/knex-read-replica.ts", "template": "export const rr = {};\n" } ] },
    { "id": "sequelize-read-write-splitting-minimal", "stack": ["sequelize"], "tags": ["db"], "files": [ { "path": "src/db/sequelize-split.ts", "template": "export const split = {};\n" } ] },
    { "id": "apollo-cache-redirects-advanced", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/cache-redirects.ts", "template": "export const redirects = {};\n" } ] },
    { "id": "relay-fetch-graphcache-stub-minimal", "stack": ["relay"], "tags": ["graphql"], "files": [ { "path": "src/graphql/relay-graphcache.ts", "template": "export const graphcache = {};\n" } ] },
    { "id": "urql-ssr-cache-rehydrate-minimal", "stack": ["urql"], "tags": ["graphql"], "files": [ { "path": "src/graphql/urql-rehydrate.ts", "template": "export const rehydrate = {};\n" } ] },
    { "id": "swr-broadcast-update-channel-minimal", "stack": ["swr"], "tags": ["frontend"], "files": [ { "path": "src/swr/broadcast.ts", "template": "export const channel = 'updates';\n" } ] },
    { "id": "redux-toolkit-query-retry-policy-advanced", "stack": ["redux"], "tags": ["state"], "files": [ { "path": "src/redux/rtk-retry.ts", "template": "export const retry = {};\n" } ] },
    { "id": "zustand-store-slices-composition-minimal", "stack": ["zustand"], "tags": ["state"], "files": [ { "path": "src/state/slices.ts", "template": "export const slices = {};\n" } ] },
    { "id": "radix-ui-resizable-panels-advanced", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/resizable-panels.tsx", "template": "export function Panels(){ return null }\n" } ] },
    { "id": "shadcn-calendar-date-range-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/calendar-range.tsx", "template": "export function CalendarRange(){ return null }\n" } ] },
    { "id": "tailwindcss-container-queries-advanced", "stack": ["tailwindcss"], "tags": ["style"], "files": [ { "path": "src/styles/container-queries.css", "template": "/* cq advanced */\n" } ] },
    { "id": "storybook-test-runner-config-minimal", "stack": ["storybook"], "tags": ["testing"], "files": [ { "path": ".storybook/test-runner.ts", "template": "export default {};\n" } ] },
    { "id": "playwright-storage-state-auth-minimal", "stack": ["playwright"], "tags": ["testing"], "files": [ { "path": "src/test/storage-state.ts", "template": "export const state = {};\n" } ] },
    { "id": "vitest-setup-file-env-minimal", "stack": ["vitest"], "tags": ["testing"], "files": [ { "path": "src/test/setup-env.ts", "template": "export const setupEnv = {};\n" } ] },
    { "id": "docker-compose-observability-stack-minimal", "stack": ["docker"], "tags": ["infra"], "files": [ { "path": "docker-compose.observability.yml", "template": "version: '3.9'\nservices: {}\n" } ] },
    { "id": "helm-hpa-template-advanced", "stack": ["helm"], "tags": ["infra"], "files": [ { "path": "deploy/templates/hpa.yaml", "template": "# hpa template\n" } ] },
    { "id": "terraform-aws-sqs-dlq-wiring-minimal", "stack": ["terraform"], "tags": ["infra"], "files": [ { "path": "infra/sqs-dlq.tf", "template": "# sqs dlq\n" } ] },
    { "id": "serverless-sqs-trigger-lambda-minimal", "stack": ["serverless"], "tags": ["infra"], "files": [ { "path": "serverless.sqs.yml", "template": "service: sqs\n" } ] }
  ]
}
