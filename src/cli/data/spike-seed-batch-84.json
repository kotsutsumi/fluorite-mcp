{
  "items": [
    { "id": "strike-spring-webclient-retry-backoff", "name": "Spring WebClient Retry + Backoff", "stack": ["java","spring","webflux"], "tags": ["http","resilience"], "files": [{ "path": "src/main/java/example/RetryCfg.java", "template": "// webclient retry backoff skeleton\n" }] },
    { "id": "strike-spring-cloud-stream-kafka-dedup", "name": "Cloud Stream Kafka De-dup", "stack": ["java","spring","kafka"], "tags": ["stream","dedup"], "files": [{ "path": "src/main/resources/application.yml", "template": "# kafka message dedup skeleton\n" }] },
    { "id": "strike-quarkus-vertx-webclient-retry", "name": "Quarkus Vert.x WebClient Retry", "stack": ["java","quarkus","vertx"], "tags": ["http","retry"], "files": [{ "path": "src/main/java/org/acme/WebClient.java", "template": "// vertx webclient retry skeleton\n" }] },
    { "id": "strike-micronaut-multitenant-tenantresolver", "name": "Micronaut MultiTenant Resolver", "stack": ["java","micronaut"], "tags": ["multitenant"], "files": [{ "path": "src/main/java/example/Tenant.java", "template": "// micronaut tenant resolver skeleton\n" }] },
    { "id": "strike-ktor-server-auth-jwt-refresh-rotate", "name": "Ktor JWT Refresh + Rotate", "stack": ["kotlin","ktor","jwt"], "tags": ["auth"], "files": [{ "path": "src/AuthRotate.kt", "template": "// ktor jwt refresh rotate skeleton\n" }] },

    { "id": "strike-aspnet-minimal-endpoint-filters", "name": ".NET Minimal Endpoint Filters", "stack": ["dotnet","aspnet"], "tags": ["api"], "files": [{ "path": "Program.cs", "template": "// minimal endpoint filters skeleton\n" }] },
    { "id": "strike-efcore-bulk-upsert", "name": "EFCore Bulk Upsert", "stack": ["dotnet","efcore"], "tags": ["db","perf"], "files": [{ "path": "Data/BulkUpsert.cs", "template": "// efcore bulk upsert skeleton\n" }] },
    { "id": "strike-serilog-grafana-loki-opentelemetry", "name": "Serilog Loki + OTel", "stack": ["dotnet","serilog","loki","opentelemetry"], "tags": ["logs"], "files": [{ "path": "Program.cs", "template": "// serilog loki + otel exporter skeleton\n" }] },
    { "id": "strike-orleans-streams-nats", "name": "Orleans Streams NATS", "stack": ["dotnet","orleans","nats"], "tags": ["stream"], "files": [{ "path": "Grains/StreamNats.cs", "template": "// orleans streams nats skeleton\n" }] },

    { "id": "strike-express-otel-instrumentation", "name": "Express OTel Instrumentation", "stack": ["node","express","opentelemetry"], "tags": ["observability"], "files": [{ "path": "server.js", "template": "// express otel instrumentation skeleton\n" }] },
    { "id": "strike-nestjs-redis-streams-consumer", "name": "NestJS Redis Streams Consumer", "stack": ["node","nestjs","redis"], "tags": ["stream"], "files": [{ "path": "src/streams.ts", "template": "// nestjs redis streams consumer skeleton\n" }] },
    { "id": "strike-fastify-file-upload-s3-presign", "name": "Fastify Upload S3 Presign", "stack": ["node","fastify","s3"], "tags": ["upload"], "files": [{ "path": "server.js", "template": "// fastify s3 presign upload skeleton\n" }] },
    { "id": "strike-h3-helmet-security-headers", "name": "h3 Helmet Security Headers", "stack": ["node","h3"], "tags": ["security"], "files": [{ "path": "server.ts", "template": "// h3 helmet headers skeleton\n" }] },

    { "id": "strike-fastapi-websocket-jwt", "name": "FastAPI WebSocket + JWT", "stack": ["python","fastapi"], "tags": ["realtime","auth"], "files": [{ "path": "app/ws_jwt.py", "template": "# fastapi websocket jwt skeleton\n" }] },
    { "id": "strike-django-cacheops-invalidation-patterns", "name": "Django cacheops Invalidation Patterns", "stack": ["python","django","redis"], "tags": ["cache"], "files": [{ "path": "app/cacheops_patterns.py", "template": "# cacheops invalidation patterns skeleton\n" }] },
    { "id": "strike-pydantic-v2-jsonschema-extras", "name": "Pydantic v2 JSONSchema Extras", "stack": ["python","pydantic"], "tags": ["typing"], "files": [{ "path": "app/jsonschema_extras.py", "template": "# pydantic jsonschema extras skeleton\n" }] },
    { "id": "strike-dagster-asset-observations", "name": "Dagster Asset Observations", "stack": ["dagster"], "tags": ["data","observability"], "files": [{ "path": "assets/observations.py", "template": "# dagster asset observations skeleton\n" }] },
    { "id": "strike-prefect-deployment-concurrency", "name": "Prefect Deployment Concurrency", "stack": ["prefect"], "tags": ["deploy","concurrency"], "files": [{ "path": "flows/deploy_concurrency.py", "template": "# prefect deployment concurrency skeleton\n" }] },

    { "id": "strike-spark-structured-mqtt", "name": "Spark Structured MQTT", "stack": ["spark","mqtt"], "tags": ["stream"], "files": [{ "path": "spark/mqtt.py", "template": "# spark structured mqtt skeleton\n" }] },
    { "id": "strike-trino-kerberos-oauth2-mixed", "name": "Trino Kerberos + OAuth2 Mixed", "stack": ["trino","kerberos","oauth2"], "tags": ["auth"], "files": [{ "path": "trino/config.properties", "template": "# trino kerberos + oauth2 mixed skeleton\n" }] },
    { "id": "strike-snowflake-access-control-tags", "name": "Snowflake Access Control Tags", "stack": ["snowflake"], "tags": ["security"], "files": [{ "path": "snowflake/tags.sql", "template": "-- snowflake access control tags skeleton\n" }] },
    { "id": "strike-bigquery-row-access-iam-policies", "name": "BigQuery Row Access IAM", "stack": ["gcp","bigquery"], "tags": ["security"], "files": [{ "path": "bq/row_access_iam.sql", "template": "-- bigquery row access iam policies skeleton\n" }] },

    { "id": "strike-chromadb-collection-shards", "name": "ChromaDB Collection Shards", "stack": ["chromadb"], "tags": ["vector","shard"], "files": [{ "path": "chroma/shards.py", "template": "# chromadb collection shards skeleton\n" }] },
    { "id": "strike-milvus-index-hnsw-ivf-tune", "name": "Milvus HNSW/IVF Tune", "stack": ["milvus"], "tags": ["vector"], "files": [{ "path": "milvus/tune.py", "template": "# milvus hnsw/ivf tuning skeleton\n" }] },
    { "id": "strike-pinecone-batch-upsert", "name": "Pinecone Batch Upsert", "stack": ["pinecone"], "tags": ["vector"], "files": [{ "path": "pinecone/batch_upsert.json", "template": "{ }\n" }] },

    { "id": "strike-argocd-notifications-teams", "name": "ArgoCD Notifications Teams", "stack": ["argocd","teams"], "tags": ["gitops","notify"], "files": [{ "path": "k8s/notify_teams.yaml", "template": "# argocd notifications teams skeleton\n" }] },
    { "id": "strike-fluxcd-sops-kms-gcp", "name": "FluxCD SOPS KMS(GCP)", "stack": ["fluxcd","sops","gcp"], "tags": ["gitops","secrets"], "files": [{ "path": "k8s/sops_kms_gcp.yaml", "template": "# flux sops kms gcp skeleton\n" }] },
    { "id": "strike-helmfile-templating-strategies", "name": "Helmfile Templating Strategies", "stack": ["helmfile"], "tags": ["gitops"], "files": [{ "path": "helmfile.yaml", "template": "# helmfile templating strategies skeleton\n" }] },
    { "id": "strike-kustomize-replacements-sed", "name": "Kustomize Replacements(SED)", "stack": ["kustomize"], "tags": ["gitops"], "files": [{ "path": "k8s/replacements_sed.yaml", "template": "# kustomize sed replacements skeleton\n" }] },

    { "id": "strike-kyverno-drop-capabilities", "name": "Kyverno Drop Linux Capabilities", "stack": ["kyverno"], "tags": ["policy"], "files": [{ "path": "kyverno/drop_caps.yaml", "template": "# kyverno drop capabilities skeleton\n" }] },
    { "id": "strike-opa-rego-service-deny-by-time", "name": "OPA Service Deny by Time", "stack": ["opa"], "tags": ["policy"], "files": [{ "path": "policy/time_deny.rego", "template": "# rego deny service by time skeleton\n" }] },
    { "id": "strike-falco-write-shadow-utils", "name": "Falco Write shadow-utils Detect", "stack": ["falco"], "tags": ["security"], "files": [{ "path": "falco/shadow_utils.yaml", "template": "# falco write shadow-utils detect skeleton\n" }] },

    { "id": "strike-workers-ai-embedding-pipeline", "name": "Workers AI Embedding Pipeline", "stack": ["cloudflare","workers-ai"], "tags": ["ai","embedding"], "files": [{ "path": "src/embed.ts", "template": "// workers ai embedding pipeline skeleton\n" }] },
    { "id": "strike-deno-kv-queues-dlq-monitor", "name": "Deno KV Queues DLQ Monitor", "stack": ["deno","kv","queues"], "tags": ["edge","monitor"], "files": [{ "path": "dlq_monitor.ts", "template": "// deno kv queues dlq monitor skeleton\n" }] },
    { "id": "strike-vercel-middleware-experimental-headers", "name": "Vercel Middleware Experimental Headers", "stack": ["vercel"], "tags": ["edge","headers"], "files": [{ "path": "middleware.ts", "template": "// vercel experimental headers middleware skeleton\n" }] },
    { "id": "strike-flyio-services-private-memcache", "name": "Fly.io Private Memcache", "stack": ["flyio","memcache"], "tags": ["cache"], "files": [{ "path": "fly.toml", "template": "# fly private memcache skeleton\n" }] }
  ]
}

