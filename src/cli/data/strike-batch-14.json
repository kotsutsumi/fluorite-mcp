{
  "items": [
    { "id": "temporal-workflow-stub-minimal", "stack": ["temporal"], "tags": ["workflow"], "files": [ { "path": "src/workflow/temporal.ts", "template": "export const workflow = {};\n" } ] },
    { "id": "nats-jetstream-producer-minimal", "stack": ["nats"], "tags": ["stream"], "files": [ { "path": "src/stream/nats-producer.ts", "template": "export async function produce(){ return true }\n" } ] },
    { "id": "nats-jetstream-consumer-minimal", "stack": ["nats"], "tags": ["stream"], "files": [ { "path": "src/stream/nats-consumer.ts", "template": "export async function consume(){ return true }\n" } ] },
    { "id": "mongodb-change-streams-minimal", "stack": ["mongodb"], "tags": ["db", "realtime"], "files": [ { "path": "src/db/mongo-change.ts", "template": "export async function watch(){ return true }\n" } ] },
    { "id": "firestore-collection-crud-minimal", "stack": ["gcp"], "tags": ["db"], "files": [ { "path": "src/db/firestore.ts", "template": "export const firestore = {};\n" } ] },
    { "id": "azure-functions-http-trigger-minimal", "stack": ["azure-functions"], "tags": ["serverless"], "files": [ { "path": "api/HttpTrigger/index.ts", "template": "export default async function(context:any, req:any){ context.res = { body: 'ok' }; }\n" } ] },
    { "id": "gcp-cloud-functions-http-minimal", "stack": ["gcp"], "tags": ["serverless"], "files": [ { "path": "functions/http.ts", "template": "export const http = (req:any,res:any)=> res.send('ok');\n" } ] },
    { "id": "azure-event-hubs-producer-minimal", "stack": ["azure"], "tags": ["stream"], "files": [ { "path": "src/stream/event-hubs-producer.ts", "template": "export async function send(){ return true }\n" } ] },
    { "id": "azure-cosmosdb-client-minimal", "stack": ["azure"], "tags": ["db"], "files": [ { "path": "src/db/cosmos.ts", "template": "export const cosmos = {};\n" } ] },
    { "id": "supabase-realtime-subscribe-minimal", "stack": ["supabase"], "tags": ["realtime"], "files": [ { "path": "src/realtime/supabase.ts", "template": "export const subscribe = {};\n" } ] },
    { "id": "graphql-yoga-subscriptions-minimal", "stack": ["graphql-yoga"], "tags": ["graphql"], "files": [ { "path": "src/graphql/yoga-subscriptions.ts", "template": "export const subscriptions = {};\n" } ] },
    { "id": "apollo-client-cache-persist-minimal", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/cache-persist.ts", "template": "export const persist = {};\n" } ] },
    { "id": "urql-subscription-exchange-minimal", "stack": ["urql"], "tags": ["graphql"], "files": [ { "path": "src/graphql/urql-subscription.ts", "template": "export const sub = {};\n" } ] },
    { "id": "relay-network-logger-minimal", "stack": ["relay"], "tags": ["graphql"], "files": [ { "path": "src/graphql/relay-network.ts", "template": "export const network = {};\n" } ] },
    { "id": "argo-workflows-template-stub-minimal", "stack": ["argocd"], "tags": ["cicd"], "files": [ { "path": "infra/argo-workflow.yaml", "template": "# argo workflow\n" } ] },
    { "id": "github-actions-reusable-ci-minimal", "stack": ["github-actions"], "tags": ["cicd"], "files": [ { "path": ".github/workflows/reuse.yml", "template": "name: ci\n" } ] },
    { "id": "gitlab-ci-templates-minimal", "stack": ["gitlab"], "tags": ["cicd"], "files": [ { "path": ".gitlab-ci.yml", "template": "stages: []\n" } ] },
    { "id": "circleci-config-stub-minimal", "stack": ["circleci"], "tags": ["cicd"], "files": [ { "path": ".circleci/config.yml", "template": "version: 2.1\n" } ] },
    { "id": "istio-virtual-service-stub-minimal", "stack": ["istio"], "tags": ["service-mesh"], "files": [ { "path": "k8s/istio-virtualservice.yaml", "template": "# istio vs\n" } ] },
    { "id": "linkerd-serviceprofile-stub-minimal", "stack": ["linkerd"], "tags": ["service-mesh"], "files": [ { "path": "k8s/linkerd-serviceprofile.yaml", "template": "# linkerd sp\n" } ] },
    { "id": "prometheus-alert-rules-minimal", "stack": ["prometheus"], "tags": ["monitoring"], "files": [ { "path": "monitoring/alerts.yml", "template": "groups: []\n" } ] },
    { "id": "grafana-alerting-provisioning-minimal", "stack": ["grafana"], "tags": ["monitoring"], "files": [ { "path": "monitoring/grafana-provisioning.yml", "template": "apiVersion: 1\n" } ] },
    { "id": "opensearch-index-template-stub-minimal", "stack": ["opensearch"], "tags": ["search"], "files": [ { "path": "src/search/opensearch-template.ts", "template": "export const template = {};\n" } ] },
    { "id": "elasticsearch-snapshot-lifecycle-minimal", "stack": ["elasticsearch"], "tags": ["search"], "files": [ { "path": "src/search/es-slm.ts", "template": "export const slm = {};\n" } ] },
    { "id": "typesense-multi-tenant-collections-minimal", "stack": ["typesense"], "tags": ["search", "tenant"], "files": [ { "path": "src/search/typesense-tenant.ts", "template": "export const tenant = {};\n" } ] },
    { "id": "meilisearch-stop-words-advanced", "stack": ["meilisearch"], "tags": ["search"], "files": [ { "path": "src/search/meili-stop-words.ts", "template": "export const stop = [];\n" } ] },
    { "id": "openai-rag-tool-calls-advanced", "stack": ["openai"], "tags": ["ai"], "files": [ { "path": "src/ai/openai-rag-tools.ts", "template": "export async function call(){ return []; }\n" } ] },
    { "id": "cohere-classify-stub-minimal", "stack": ["cohere"], "tags": ["ai"], "files": [ { "path": "src/ai/cohere-classify.ts", "template": "export async function classify(){ return []; }\n" } ] },
    { "id": "mistral-embeddings-stub-minimal", "stack": ["mistral"], "tags": ["ai"], "files": [ { "path": "src/ai/mistral-embed.ts", "template": "export async function embed(){ return []; }\n" } ] },
    { "id": "llamaindex-eval-stub-minimal", "stack": ["llamaindex"], "tags": ["ai"], "files": [ { "path": "src/ai/llamaindex-eval.ts", "template": "export async function eval(){ return []; }\n" } ] },
    { "id": "s3-eventbridge-notification-minimal", "stack": ["aws"], "tags": ["events"], "files": [ { "path": "infra/s3-eventbridge.json", "template": "{ }\n" } ] },
    { "id": "eventbridge-scheduler-stub-minimal", "stack": ["aws"], "tags": ["events"], "files": [ { "path": "infra/eventbridge-scheduler.json", "template": "{ }\n" } ] },
    { "id": "knex-seed-runner-minimal", "stack": ["knex"], "tags": ["db", "seed"], "files": [ { "path": "src/db/knex-seed.ts", "template": "export async function seed(){ return true }\n" } ] },
    { "id": "prisma-extends-client-advanced", "stack": ["prisma"], "tags": ["db"], "files": [ { "path": "src/db/prisma-extends.ts", "template": "export const extendsClient = {};\n" } ] },
    { "id": "drizzle-sqlite-client-minimal", "stack": ["drizzle"], "tags": ["db"], "files": [ { "path": "src/db/drizzle-sqlite.ts", "template": "export const sqlite = {};\n" } ] },
    { "id": "redis-json-indexing-minimal", "stack": ["redis"], "tags": ["cache"], "files": [ { "path": "src/cache/redis-json-index.ts", "template": "export const index = {};\n" } ] },
    { "id": "rabbitmq-quorum-queue-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/quorum.ts", "template": "export const quorum = {};\n" } ] },
    { "id": "kafka-producer-transactions-stub-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/transactions.ts", "template": "export const tx = {};\n" } ] },
    { "id": "cloudflare-workers-kv-bindings-minimal", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "wrangler.toml", "template": "name = \"app\"\n" } ] },
    { "id": "nextjs-webcrypto-sign-verify-secure", "stack": ["nextjs"], "tags": ["security"], "files": [ { "path": "src/next/webcrypto.ts", "template": "export async function sign(){ return new Uint8Array(); }\n" } ] },
    { "id": "zod-jsonschema-openapi-stub-minimal", "stack": ["zod"], "tags": ["validation"], "files": [ { "path": "src/validation/zod-jsonschema.ts", "template": "export const schema = {};\n" } ] },
    { "id": "storybook-msw-addon-minimal", "stack": ["storybook"], "tags": ["testing"], "files": [ { "path": ".storybook/msw.ts", "template": "export default {};\n" } ] },
    { "id": "playwright-trace-attach-gha-minimal", "stack": ["playwright"], "tags": ["testing"], "files": [ { "path": "src/test/trace-attach.ts", "template": "export const attach = {};\n" } ] },
    { "id": "vitest-snapshot-serializer-minimal", "stack": ["vitest"], "tags": ["testing"], "files": [ { "path": "src/test/snapshot-serializer.ts", "template": "export const serializer = {};\n" } ] },
    { "id": "tailwindcss-radix-plugin-config-minimal", "stack": ["tailwindcss"], "tags": ["style"], "files": [ { "path": "src/styles/radix.css", "template": "/* radix plugin */\n" } ] },
    { "id": "radix-ui-hover-card-advanced", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/hover-card-adv.tsx", "template": "export function HoverCardAdv(){ return null }\n" } ] },
    { "id": "shadcn-toast-provider-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/toast-provider.tsx", "template": "export function ToastProvider(){ return null }\n" } ] },
    { "id": "swr-merge-mutation-pattern-minimal", "stack": ["swr"], "tags": ["frontend"], "files": [ { "path": "src/swr/merge-mutation.ts", "template": "export const merge = {};\n" } ] },
    { "id": "redux-toolkit-listener-pattern-advanced", "stack": ["redux"], "tags": ["state"], "files": [ { "path": "src/redux/listener-adv.ts", "template": "export const listener = {};\n" } ] },
    { "id": "zustand-selector-equalityfn-minimal", "stack": ["zustand"], "tags": ["state"], "files": [ { "path": "src/state/equality.ts", "template": "export const equality = {};\n" } ] }
  ]
}
