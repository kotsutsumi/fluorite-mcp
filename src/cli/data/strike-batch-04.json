{
  "items": [
    { "id": "nextjs-route-error-handler-advanced", "stack": ["nextjs"], "tags": ["api"], "files": [ { "path": "app/api/error-demo/route.ts", "template": "export async function GET(){ try { throw new Error('boom'); } catch(e){ return Response.json({ ok:false, error:String(e) }, { status:500 }); } }\n" } ] },
    { "id": "nextjs-route-zod-validated-secure", "stack": ["nextjs", "zod"], "tags": ["api"], "files": [ { "path": "app/api/validated/route.ts", "template": "import { z } from 'zod';\nconst Body = z.object({ message: z.string().min(1) });\nexport async function POST(req: Request){ const json = await req.json(); const p=Body.safeParse(json); if(!p.success) return Response.json({ error:p.error.format() }, { status:400 }); return Response.json({ ok:true, echo:p.data.message }); }\n" } ] },
    { "id": "nextjs-route-streaming-minimal", "stack": ["nextjs"], "tags": ["api"], "files": [ { "path": "app/api/stream/route.ts", "template": "export async function GET(){ const enc = new TextEncoder(); const stream = new ReadableStream({ start(c){ c.enqueue(enc.encode('hello')); c.close(); } }); return new Response(stream); }\n" } ] },
    { "id": "nextjs-route-file-upload-minimal", "stack": ["nextjs"], "tags": ["api", "upload"], "files": [ { "path": "app/api/upload/route.ts", "template": "export async function POST(req: Request){ const form = await req.formData(); return Response.json({ files: Array.from(form.keys()) }); }\n" } ] },
    { "id": "nextjs-middleware-edge-headers-secure", "stack": ["nextjs"], "tags": ["edge"], "files": [ { "path": "middleware.ts", "template": "export function middleware(){ const res = Response.next(); res.headers.set('x-edge','1'); return res; }\n" } ] },
    { "id": "next-auth-provider-line-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-line.ts", "template": "export const line = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "next-auth-provider-slack-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-slack.ts", "template": "export const slack = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "next-auth-provider-gitlab-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-gitlab.ts", "template": "export const gitlab = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "next-auth-provider-bitbucket-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-bitbucket.ts", "template": "export const bitbucket = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "next-auth-provider-facebook-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-facebook.ts", "template": "export const facebook = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "next-auth-provider-linkedin-minimal", "stack": ["next-auth"], "tags": ["auth"], "files": [ { "path": "src/auth/nextauth-linkedin.ts", "template": "export const linkedin = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "clerk-ssr-auth-guard-minimal", "stack": ["clerk", "nextjs"], "tags": ["auth"], "files": [ { "path": "src/auth/clerk-ssr.ts", "template": "export function requireSSR(){ return true }\n" } ] },
    { "id": "lucia-oauth-github-minimal", "stack": ["lucia"], "tags": ["auth"], "files": [ { "path": "src/auth/lucia-github.ts", "template": "export const github = { clientId: '', clientSecret: '' };\n" } ] },
    { "id": "trpc-ws-link-minimal", "stack": ["trpc"], "tags": ["api"], "files": [ { "path": "src/trpc/ws-link.ts", "template": "export const wsLink = {};\n" } ] },
    { "id": "trpc-superjson-transformer-minimal", "stack": ["trpc"], "tags": ["api"], "files": [ { "path": "src/trpc/transformer.ts", "template": "export const transformer = {};\n" } ] },
    { "id": "apollo-client-split-link-auth-advanced", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/split-link.ts", "template": "export const splitLink = {};\n" } ] },
    { "id": "apollo-client-retry-error-link-advanced", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/retry-error.ts", "template": "export const links = {};\n" } ] },
    { "id": "bullmq-rate-limit-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/rate-limit.ts", "template": "export const rateLimit = {};\n" } ] },
    { "id": "bullmq-repeatable-jobs-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/repeat.ts", "template": "export const repeat = {};\n" } ] },
    { "id": "bullmq-job-progress-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/progress.ts", "template": "export const progress = {};\n" } ] },
    { "id": "kafka-consumer-pause-resume-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/pause-resume.ts", "template": "export const pr = {};\n" } ] },
    { "id": "kafka-exactly-once-stub-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/exactly-once.ts", "template": "export const exactlyOnce = {};\n" } ] },
    { "id": "rabbitmq-rpc-pattern-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/rpc.ts", "template": "export const rpc = {};\n" } ] },
    { "id": "rabbitmq-topic-exchange-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/topic.ts", "template": "export const topic = {};\n" } ] },
    { "id": "algolia-rules-advanced", "stack": ["algolia"], "tags": ["search"], "files": [ { "path": "src/search/algolia-rules.ts", "template": "export const rules = [];\n" } ] },
    { "id": "meilisearch-synonyms-minimal", "stack": ["meilisearch"], "tags": ["search"], "files": [ { "path": "src/search/meili-synonyms.ts", "template": "export const synonyms = {};\n" } ] },
    { "id": "openai-structured-outputs-advanced", "stack": ["openai"], "tags": ["ai"], "files": [ { "path": "src/ai/openai-structured.ts", "template": "export async function run(){ return 'ok' }\n" } ] },
    { "id": "openai-function-calls-advanced", "stack": ["openai"], "tags": ["ai"], "files": [ { "path": "src/ai/openai-func-adv.ts", "template": "export async function call(){ return 'ok' }\n" } ] },
    { "id": "langchain-hybrid-retriever-advanced", "stack": ["langchain"], "tags": ["ai"], "files": [ { "path": "src/ai/hybrid-retriever.ts", "template": "export const retriever = {};\n" } ] },
    { "id": "pinecone-delete-vectors-minimal", "stack": ["pinecone"], "tags": ["vector"], "files": [ { "path": "src/vectors/pinecone-delete.ts", "template": "export async function del(){ return true }\n" } ] },
    { "id": "qdrant-query-topk-minimal", "stack": ["qdrant"], "tags": ["vector"], "files": [ { "path": "src/vectors/qdrant-query.ts", "template": "export async function topk(){ return [] }\n" } ] },
    { "id": "weaviate-hybrid-search-minimal", "stack": ["weaviate"], "tags": ["vector"], "files": [ { "path": "src/vectors/weaviate-hybrid.ts", "template": "export async function search(){ return [] }\n" } ] },
    { "id": "milvus-compact-collection-minimal", "stack": ["milvus"], "tags": ["vector"], "files": [ { "path": "src/vectors/milvus-compact.ts", "template": "export async function compact(){ return true }\n" } ] },
    { "id": "cloudflare-durable-object-minimal", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "src/cloudflare/do.ts", "template": "export class DO { constructor(state:any, env:any){} fetch(){ return new Response('ok'); } }\n" } ] },
    { "id": "express-rate-limit-minimal", "stack": ["express"], "tags": ["security"], "files": [ { "path": "src/security/rate-limit.ts", "template": "export const rate = {};\n" } ] },
    { "id": "nextjs-rate-limit-middleware-minimal", "stack": ["nextjs"], "tags": ["security"], "files": [ { "path": "src/security/next-rate.ts", "template": "export const nextRate = {};\n" } ] },
    { "id": "csp-header-config-minimal", "stack": ["nextjs"], "tags": ["security"], "files": [ { "path": "src/security/csp.ts", "template": "export const csp = {};\n" } ] },
    { "id": "turborepo-pipeline-minimal", "stack": ["turborepo"], "tags": ["build"], "files": [ { "path": "turbo.json", "template": "{ \"pipeline\": { \"build\": { } } }\n" } ] },
    { "id": "shadcn-tabs-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/tabs.tsx", "template": "export function Tabs(){ return null }\n" } ] },
    { "id": "shadcn-dropdown-menu-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/dropdown.tsx", "template": "export function Dropdown(){ return null }\n" } ] },
    { "id": "radix-ui-popover-minimal", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/popover.tsx", "template": "export function Popover(){ return null }\n" } ] },
    { "id": "radix-ui-dialog-advanced", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/dialog-adv.tsx", "template": "export function DialogAdv(){ return null }\n" } ] },
    { "id": "redux-entity-adapter-minimal", "stack": ["redux"], "tags": ["state"], "files": [ { "path": "src/redux/entity-adapter.ts", "template": "export const adapter = {};\n" } ] },
    { "id": "zustand-selectors-minimal", "stack": ["zustand"], "tags": ["state"], "files": [ { "path": "src/state/selectors.ts", "template": "export const selectors = {};\n" } ] },
    { "id": "swr-key-serialization-minimal", "stack": ["swr"], "tags": ["frontend"], "files": [ { "path": "src/swr/key.ts", "template": "export const key = {};\n" } ] },
    { "id": "react-hook-form-zod-resolver-minimal", "stack": ["react-hook-form", "zod"], "tags": ["forms"], "files": [ { "path": "src/forms/zod-resolver.tsx", "template": "export function Form(){ return null }\n" } ] },
    { "id": "react-hook-form-persist-minimal", "stack": ["react-hook-form"], "tags": ["forms"], "files": [ { "path": "src/forms/persist.tsx", "template": "export function PersistForm(){ return null }\n" } ] },
    { "id": "winston-json-logger-minimal", "stack": ["winston"], "tags": ["logging"], "files": [ { "path": "src/logging/winston.ts", "template": "export const logger = {};\n" } ] },
    { "id": "pino-transport-pretty-minimal", "stack": ["pino"], "tags": ["logging"], "files": [ { "path": "src/logging/pino-pretty.ts", "template": "export const transport = {};\n" } ] }
  ]
}
