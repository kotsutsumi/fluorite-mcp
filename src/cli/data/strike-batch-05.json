{
  "items": [
    { "id": "nextjs-route-json-error-wrapper-secure", "stack": ["nextjs"], "tags": ["api"], "files": [ { "path": "src/next/error.ts", "template": "export function jsonError(e: unknown, status=400){ return Response.json({ ok:false, error:String(e) }, { status }); }\n" } ] },
    { "id": "nextjs-rsc-safe-action-typed-advanced", "stack": ["nextjs"], "tags": ["server-actions"], "files": [ { "path": "app/actions/safe-typed.ts", "template": "export async function action<T extends { id: string }>(input: T){ return { ok:true, data: input }; }\n" } ] },
    { "id": "nextjs-edge-retry-fetch-secure", "stack": ["nextjs"], "tags": ["edge"], "files": [ { "path": "src/edge/retry-fetch.ts", "template": "export async function retryFetch(url:string, init?:RequestInit){ return fetch(url, init); }\n" } ] },
    { "id": "nextjs-rate-limit-rsc-secure", "stack": ["nextjs"], "tags": ["security"], "files": [ { "path": "src/security/rate-rsc.ts", "template": "export function rate(){ return true }\n" } ] },
    { "id": "next-auth-pkce-secure", "stack": ["next-auth"], "tags": ["auth", "secure"], "files": [ { "path": "src/auth/pkce.ts", "template": "export const pkce = { enabled: true };\n" } ] },
    { "id": "next-auth-state-nonce-secure", "stack": ["next-auth"], "tags": ["auth", "secure"], "files": [ { "path": "src/auth/state-nonce.ts", "template": "export const antiCsrf = { state:true, nonce:true };\n" } ] },
    { "id": "clerk-sso-saml-minimal", "stack": ["clerk"], "tags": ["auth", "sso"], "files": [ { "path": "src/auth/clerk-sso.ts", "template": "export const saml = { issuer: '' };\n" } ] },
    { "id": "lucia-rbac-middleware-advanced", "stack": ["lucia"], "tags": ["auth", "rbac"], "files": [ { "path": "src/auth/lucia-rbac.ts", "template": "export function withRBAC(){ return null }\n" } ] },
    { "id": "auth0-enterprise-connection-stub", "stack": ["auth0"], "tags": ["auth", "enterprise"], "files": [ { "path": "src/auth/auth0-enterprise.ts", "template": "export const connection = { strategy: 'saml' };\n" } ] },
    { "id": "trpc-ssr-helpers-minimal", "stack": ["trpc"], "tags": ["api"], "files": [ { "path": "src/trpc/ssr.ts", "template": "export const ssr = {};\n" } ] },
    { "id": "apollo-cache-merge-strategies-advanced", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/merge-strategies.ts", "template": "export const merge = {};\n" } ] },
    { "id": "bullmq-sandbox-processor-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/sandbox.ts", "template": "export const sandbox = {};\n" } ] },
    { "id": "bullmq-worker-events-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/events.ts", "template": "export const events = {};\n" } ] },
    { "id": "kafka-rebalance-handlers-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/rebalance.ts", "template": "export const rebalance = {};\n" } ] },
    { "id": "kafka-idempotent-producer-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/idempotent.ts", "template": "export const idempotent = {};\n" } ] },
    { "id": "rabbitmq-priority-queue-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/priority.ts", "template": "export const priority = {};\n" } ] },
    { "id": "algolia-multiple-indices-advanced", "stack": ["algolia"], "tags": ["search"], "files": [ { "path": "src/search/algolia-multi-index.ts", "template": "export const indices = [];\n" } ] },
    { "id": "meilisearch-ranking-rules-advanced", "stack": ["meilisearch"], "tags": ["search"], "files": [ { "path": "src/search/meili-ranking.ts", "template": "export const ranking = [];\n" } ] },
    { "id": "typesense-collection-schema-advanced", "stack": ["typesense"], "tags": ["search"], "files": [ { "path": "src/search/typesense-schema.ts", "template": "export const schema = {};\n" } ] },
    { "id": "openai-tool-calls-robust-advanced", "stack": ["openai"], "tags": ["ai"], "files": [ { "path": "src/ai/openai-tools.ts", "template": "export async function tools(){ return []; }\n" } ] },
    { "id": "langchain-rerank-cross-encoder-minimal", "stack": ["langchain"], "tags": ["ai"], "files": [ { "path": "src/ai/rerank.ts", "template": "export async function rerank(){ return []; }\n" } ] },
    { "id": "pinecone-fetch-delete-namespace-minimal", "stack": ["pinecone"], "tags": ["vector"], "files": [ { "path": "src/vectors/pinecone-ns.ts", "template": "export async function purge(){ return true }\n" } ] },
    { "id": "qdrant-payload-indexing-advanced", "stack": ["qdrant"], "tags": ["vector"], "files": [ { "path": "src/vectors/qdrant-payload.ts", "template": "export const payload = {};\n" } ] },
    { "id": "weaviate-near-text-minimal", "stack": ["weaviate"], "tags": ["vector"], "files": [ { "path": "src/vectors/weaviate-neartext.ts", "template": "export async function near(){ return []; }\n" } ] },
    { "id": "milvus-index-hnsw-minimal", "stack": ["milvus"], "tags": ["vector"], "files": [ { "path": "src/vectors/milvus-index.ts", "template": "export const index = {};\n" } ] },
    { "id": "cloudflare-queues-producer-minimal", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "src/cloudflare/queues.ts", "template": "export async function enqueue(){ return true }\n" } ] },
    { "id": "cloudflare-r2-presign-minimal", "stack": ["cloudflare-workers"], "tags": ["edge", "storage"], "files": [ { "path": "src/cloudflare/r2.ts", "template": "export async function presign(){ return ''; }\n" } ] },
    { "id": "vitest-msw-playwright-setup-advanced", "stack": ["vitest", "msw", "playwright"], "tags": ["testing"], "files": [ { "path": "src/test/setup-all.ts", "template": "export async function setupAll(){ return true }\n" } ] },
    { "id": "nextjs-e2e-playwright-config-minimal", "stack": ["playwright", "nextjs"], "tags": ["testing"], "files": [ { "path": "playwright.config.ts", "template": "export default { };\n" } ] },
    { "id": "unleash-variant-rollout-minimal", "stack": ["unleash"], "tags": ["flags"], "files": [ { "path": "src/flags/unleash-variant.ts", "template": "export const variant = {};\n" } ] },
    { "id": "launchdarkly-multi-env-config-minimal", "stack": ["launchdarkly"], "tags": ["flags"], "files": [ { "path": "src/flags/ld-envs.ts", "template": "export const envs = {};\n" } ] },
    { "id": "pino-logger-http-transport-advanced", "stack": ["pino"], "tags": ["logging"], "files": [ { "path": "src/logging/pino-http.ts", "template": "export const http = {};\n" } ] },
    { "id": "winston-transport-gcp-minimal", "stack": ["winston"], "tags": ["logging"], "files": [ { "path": "src/logging/winston-gcp.ts", "template": "export const gcp = {};\n" } ] },
    { "id": "docker-healthcheck-minimal", "stack": ["docker"], "tags": ["infra"], "files": [ { "path": "Dockerfile", "template": "HEALTHCHECK CMD node -e \"console.log('ok')\"\n" } ] },
    { "id": "helm-values-prod-staging-minimal", "stack": ["helm"], "tags": ["infra"], "files": [ { "path": "deploy/values.yaml", "template": "env: prod\n" } ] },
    { "id": "terraform-aws-s3-minimal", "stack": ["terraform"], "tags": ["infra"], "files": [ { "path": "infra/main.tf", "template": "# s3 stub\n" } ] },
    { "id": "serverless-aws-lambda-api-minimal", "stack": ["serverless"], "tags": ["infra"], "files": [ { "path": "serverless.yml", "template": "service: api\n" } ] },
    { "id": "redis-rate-limiter-minimal", "stack": ["redis"], "tags": ["cache"], "files": [ { "path": "src/cache/redis-rate.ts", "template": "export const limiter = {};\n" } ] },
    { "id": "lru-cache-setup-minimal", "stack": ["lru-cache"], "tags": ["cache"], "files": [ { "path": "src/cache/lru.ts", "template": "export const cache = {};\n" } ] },
    { "id": "dotenv-staging-prod-switch-minimal", "stack": ["dotenv"], "tags": ["config"], "files": [ { "path": "src/config/env.ts", "template": "export const env = { stage: process.env.NODE_ENV };\n" } ] },
    { "id": "zod-env-validate-secure", "stack": ["zod"], "tags": ["config", "secure"], "files": [ { "path": "src/config/env-zod.ts", "template": "export const Env = {};\n" } ] },
    { "id": "storybook-accessibility-addon-minimal", "stack": ["storybook"], "tags": ["testing", "a11y"], "files": [ { "path": ".storybook/main.ts", "template": "export default { addons: ['@storybook/addon-a11y'] };\n" } ] },
    { "id": "tailwind-dark-mode-minimal", "stack": ["tailwindcss"], "tags": ["style"], "files": [ { "path": "src/styles/dark.css", "template": "/* dark mode stub */\n" } ] },
    { "id": "radix-ui-accordion-minimal", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/accordion.tsx", "template": "export function Accordion(){ return null }\n" } ] },
    { "id": "shadcn-hover-card-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/hover-card.tsx", "template": "export function HoverCard(){ return null }\n" } ] },
    { "id": "zustand-immer-middleware-minimal", "stack": ["zustand"], "tags": ["state"], "files": [ { "path": "src/state/immer.ts", "template": "export const immer = {};\n" } ] },
    { "id": "redux-persist-storage-minimal", "stack": ["redux"], "tags": ["state"], "files": [ { "path": "src/redux/persist.ts", "template": "export const persist = {};\n" } ] },
    { "id": "swr-global-fetcher-minimal", "stack": ["swr"], "tags": ["frontend"], "files": [ { "path": "src/swr/fetcher.ts", "template": "export const fetcher = (url:string)=> fetch(url).then(r=>r.json());\n" } ] },
    { "id": "react-hook-form-stepper-minimal", "stack": ["react-hook-form"], "tags": ["forms"], "files": [ { "path": "src/forms/stepper.tsx", "template": "export function Stepper(){ return null }\n" } ] }
  ]
}
