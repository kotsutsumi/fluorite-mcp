{
  "items": [
    { "id": "hasura-metadata-stub-minimal", "stack": ["hasura"], "tags": ["graphql"], "files": [ { "path": "infra/hasura/metadata.json", "template": "{ }\n" } ] },
    { "id": "appsync-vtl-resolver-stub-minimal", "stack": ["aws", "appsync"], "tags": ["graphql"], "files": [ { "path": "infra/appsync/resolver.vtl", "template": "#set($ctx.result = $util.toJson({}))\n" } ] },
    { "id": "kong-route-service-stub-minimal", "stack": ["kong"], "tags": ["gateway"], "files": [ { "path": "infra/kong/kong.yaml", "template": "_format_version: '3.0'\nservices: []\n" } ] },
    { "id": "traefik-middleware-rate-limit-minimal", "stack": ["traefik"], "tags": ["gateway", "security"], "files": [ { "path": "infra/traefik/dynamic.yaml", "template": "http: { middlewares: {} }\n" } ] },
    { "id": "caddy-reverse-proxy-stub-minimal", "stack": ["caddy"], "tags": ["gateway"], "files": [ { "path": "Caddyfile", "template": ":80 {\n\treverse_proxy localhost:3000\n}\n" } ] },
    { "id": "nginx-rate-limit-config-minimal", "stack": ["nginx"], "tags": ["gateway", "security"], "files": [ { "path": "infra/nginx/nginx.conf", "template": "events {}\nhttp { limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s; }\n" } ] },
    { "id": "vercel-cron-job-stub-minimal", "stack": ["vercel"], "tags": ["edge"], "files": [ { "path": "vercel.json", "template": "{ \"crons\": [] }\n" } ] },
    { "id": "netlify-edge-function-stub-minimal", "stack": ["netlify"], "tags": ["edge"], "files": [ { "path": "netlify/edge-functions/hello.ts", "template": "export default () => new Response('ok');\n" } ] },
    { "id": "render-blueprint-stub-minimal", "stack": ["render"], "tags": ["infra"], "files": [ { "path": "render.yaml", "template": "services: []\n" } ] },
    { "id": "flyio-app-config-stub-minimal", "stack": ["fly.io"], "tags": ["infra"], "files": [ { "path": "fly.toml", "template": "app = \"app\"\n" } ] },
    { "id": "railway-json-config-stub-minimal", "stack": ["railway"], "tags": ["infra"], "files": [ { "path": "railway.json", "template": "{ }\n" } ] },
    { "id": "docker-buildx-config-minimal", "stack": ["docker"], "tags": ["build"], "files": [ { "path": "docker-bake.hcl", "template": "group \"default\" { targets = [] }\n" } ] },
    { "id": "podman-compose-stub-minimal", "stack": ["podman"], "tags": ["infra"], "files": [ { "path": "podman-compose.yml", "template": "version: '3.9'\nservices: {}\n" } ] },
    { "id": "k3s-install-notes-stub-minimal", "stack": ["k3s"], "tags": ["kubernetes"], "files": [ { "path": "k8s/k3s.md", "template": "# k3s notes\n" } ] },
    { "id": "kind-cluster-config-minimal", "stack": ["kind"], "tags": ["kubernetes"], "files": [ { "path": "k8s/kind.yaml", "template": "kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\n" } ] },
    { "id": "tiltfile-stub-minimal", "stack": ["tilt"], "tags": ["devx"], "files": [ { "path": "Tiltfile", "template": "print('tilt')\n" } ] },
    { "id": "skaffold-config-stub-minimal", "stack": ["skaffold"], "tags": ["devx"], "files": [ { "path": "skaffold.yaml", "template": "apiVersion: skaffold/v4beta6\nkind: Config\n" } ] },
    { "id": "kustomize-base-overlay-minimal", "stack": ["kustomize"], "tags": ["kubernetes"], "files": [ { "path": "k8s/kustomization.yaml", "template": "resources: []\n" } ] },
    { "id": "helm-umbrella-chart-stub-minimal", "stack": ["helm"], "tags": ["kubernetes"], "files": [ { "path": "deploy/Chart.yaml", "template": "apiVersion: v2\nname: umbrella\n" } ] },
    { "id": "pulumi-program-typescript-stub-minimal", "stack": ["pulumi"], "tags": ["iac"], "files": [ { "path": "infra/pulumi/index.ts", "template": "export {};\n" } ] },
    { "id": "aws-cdk-app-stub-minimal", "stack": ["cdk"], "tags": ["iac"], "files": [ { "path": "infra/cdk/app.ts", "template": "export {};\n" } ] },
    { "id": "crossplane-composition-stub-minimal", "stack": ["crossplane"], "tags": ["iac"], "files": [ { "path": "infra/crossplane/composition.yaml", "template": "apiVersion: apiextensions.crossplane.io/v1\nkind: Composition\n" } ] },
    { "id": "argocd-applicationset-stub-minimal", "stack": ["argocd"], "tags": ["cicd"], "files": [ { "path": "infra/argocd/applicationset.yaml", "template": "apiVersion: argoproj.io/v1alpha1\nkind: ApplicationSet\n" } ] },
    { "id": "openfaas-function-stub-minimal", "stack": ["openfaas"], "tags": ["serverless"], "files": [ { "path": "faas.yml", "template": "provider: openfaas\n" } ] },
    { "id": "dapr-pubsub-config-minimal", "stack": ["dapr"], "tags": ["microservices"], "files": [ { "path": "dapr/components/pubsub.yaml", "template": "apiVersion: dapr.io/v1alpha1\nkind: Component\n" } ] },
    { "id": "opa-rego-policy-stub-minimal", "stack": ["opa"], "tags": ["policy"], "files": [ { "path": "policy/policy.rego", "template": "package policy\nallow := true\n" } ] },
    { "id": "kyverno-policy-stub-minimal", "stack": ["kyverno"], "tags": ["policy"], "files": [ { "path": "policy/kyverno.yaml", "template": "apiVersion: kyverno.io/v1\nkind: ClusterPolicy\n" } ] },
    { "id": "trivy-config-stub-minimal", "stack": ["trivy"], "tags": ["security"], "files": [ { "path": ".trivyignore", "template": "# ignore\n" } ] },
    { "id": "snyk-policy-stub-minimal", "stack": ["snyk"], "tags": ["security"], "files": [ { "path": ".snyk", "template": "version: v1.0.0\n" } ] },
    { "id": "dependabot-config-minimal", "stack": ["dependabot"], "tags": ["automation"], "files": [ { "path": ".github/dependabot.yml", "template": "version: 2\nupdates: []\n" } ] },
    { "id": "renovate-config-minimal", "stack": ["renovate"], "tags": ["automation"], "files": [ { "path": "renovate.json", "template": "{ \"extends\": [\"config:base\"] }\n" } ] },
    { "id": "precommit-config-minimal", "stack": ["pre-commit"], "tags": ["automation"], "files": [ { "path": ".pre-commit-config.yaml", "template": "repos: []\n" } ] },
    { "id": "husky-hook-prepare-commit-msg-minimal", "stack": ["husky"], "tags": ["automation"], "files": [ { "path": ".husky/prepare-commit-msg", "template": "#!/bin/sh\n" } ] },
    { "id": "commitlint-config-minimal", "stack": ["commitlint"], "tags": ["automation"], "files": [ { "path": "commitlint.config.js", "template": "export default { extends: ['@commitlint/config-conventional'] };\n" } ] },
    { "id": "semantic-release-config-minimal", "stack": ["semantic-release"], "tags": ["automation"], "files": [ { "path": ".releaserc", "template": "{ \"branches\": [\"main\"] }\n" } ] },
    { "id": "changesets-config-minimal", "stack": ["changesets"], "tags": ["release"], "files": [ { "path": ".changeset/config.json", "template": "{ }\n" } ] },
    { "id": "lerna-monorepo-config-minimal", "stack": ["lerna"], "tags": ["monorepo"], "files": [ { "path": "lerna.json", "template": "{ }\n" } ] },
    { "id": "pnpm-workspace-config-minimal", "stack": ["pnpm"], "tags": ["monorepo"], "files": [ { "path": "pnpm-workspace.yaml", "template": "packages: []\n" } ] },
    { "id": "yarn-berry-config-minimal", "stack": ["yarn"], "tags": ["monorepo"], "files": [ { "path": ".yarnrc.yml", "template": "nodeLinker: node-modules\n" } ] },
    { "id": "turbo-pipeline-advanced-config-minimal", "stack": ["turborepo"], "tags": ["monorepo"], "files": [ { "path": "turbo.advanced.json", "template": "{ }\n" } ] },
    { "id": "nx-custom-executor-stub-minimal", "stack": ["nx"], "tags": ["monorepo"], "files": [ { "path": "tools/executors/custom.ts", "template": "export default async()=>({ success:true });\n" } ] },
    { "id": "bazel-workspace-stub-minimal", "stack": ["bazel"], "tags": ["build"], "files": [ { "path": "WORKSPACE", "template": "workspace(name = \"app\")\n" } ] }
  ]
}
