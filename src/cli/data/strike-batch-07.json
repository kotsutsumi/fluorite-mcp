{
  "items": [
    { "id": "nextjs-route-shared-error-handler-advanced", "stack": ["nextjs"], "tags": ["api"], "files": [ { "path": "src/next/error-shared.ts", "template": "export function handle(e:unknown, status=400){ return Response.json({ ok:false, error:String(e) }, { status }); }\n" } ] },
    { "id": "nextjs-route-cors-preflight-minimal", "stack": ["nextjs"], "tags": ["api", "security"], "files": [ { "path": "app/api/_cors/route.ts", "template": "export async function OPTIONS(){ return new Response(null, { headers: { 'access-control-allow-origin': '*', 'access-control-allow-methods': 'GET,POST,OPTIONS' } }); }\n" } ] },
    { "id": "nextjs-action-zod-io-guard-secure", "stack": ["nextjs", "zod"], "tags": ["server-actions", "secure"], "files": [ { "path": "app/actions/guard-io.ts", "template": "import { z } from 'zod';\nconst In = z.object({ id: z.string() });\nconst Out = z.object({ ok: z.literal(true), id: z.string() });\nexport async function guarded(input: unknown){ const v = In.parse(input); return Out.parse({ ok: true, id: v.id }); }\n" } ] },
    { "id": "nextjs-edge-rate-limit-signature-secure", "stack": ["nextjs"], "tags": ["edge", "security"], "files": [ { "path": "src/edge/rate-sign.ts", "template": "export async function allow(ip:string){ return true }\n" } ] },
    { "id": "next-auth-refresh-token-rotation-advanced", "stack": ["next-auth"], "tags": ["auth", "secure"], "files": [ { "path": "src/auth/refresh-rotation.ts", "template": "export const rotation = { enabled: true };\n" } ] },
    { "id": "clerk-webhook-verify-minimal", "stack": ["clerk"], "tags": ["auth", "webhook"], "files": [ { "path": "src/auth/clerk-webhook.ts", "template": "export async function verify(){ return true }\n" } ] },
    { "id": "lucia-session-rotate-minimal", "stack": ["lucia"], "tags": ["auth", "secure"], "files": [ { "path": "src/auth/lucia-session.ts", "template": "export async function rotate(){ return true }\n" } ] },
    { "id": "trpc-error-shape-standard-advanced", "stack": ["trpc"], "tags": ["api"], "files": [ { "path": "src/trpc/error-shape.ts", "template": "export const errorShape = {};\n" } ] },
    { "id": "apollo-cache-normalize-ids-advanced", "stack": ["apollo"], "tags": ["graphql"], "files": [ { "path": "src/apollo/normalize.ts", "template": "export const normalize = {};\n" } ] },
    { "id": "bullmq-worker-concurrency-advanced", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/concurrency.ts", "template": "export const concurrency = 5;\n" } ] },
    { "id": "bullmq-priority-drain-handler-minimal", "stack": ["bullmq"], "tags": ["queue"], "files": [ { "path": "src/queue/drain.ts", "template": "export const drain = {};\n" } ] },
    { "id": "kafka-producer-batch-advanced", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/batch.ts", "template": "export const batch = {};\n" } ] },
    { "id": "kafka-consumer-sticky-assignor-minimal", "stack": ["kafkajs"], "tags": ["stream"], "files": [ { "path": "src/kafka/sticky.ts", "template": "export const sticky = {};\n" } ] },
    { "id": "rabbitmq-dlx-retry-minimal", "stack": ["amqplib"], "tags": ["queue"], "files": [ { "path": "src/rabbit/dlx-retry.ts", "template": "export const retry = {};\n" } ] },
    { "id": "algolia-query-rules-dynamic-promotions-advanced", "stack": ["algolia"], "tags": ["search"], "files": [ { "path": "src/search/algolia-promotions.ts", "template": "export const promotions = [];\n" } ] },
    { "id": "meilisearch-typo-tolerance-advanced", "stack": ["meilisearch"], "tags": ["search"], "files": [ { "path": "src/search/meili-typo.ts", "template": "export const typo = {};\n" } ] },
    { "id": "typesense-facets-filtering-advanced", "stack": ["typesense"], "tags": ["search"], "files": [ { "path": "src/search/typesense-facets.ts", "template": "export const facets = [];\n" } ] },
    { "id": "openai-response-format-json-strict-secure", "stack": ["openai"], "tags": ["ai", "secure"], "files": [ { "path": "src/ai/openai-json-strict.ts", "template": "export async function call(){ return {}; }\n" } ] },
    { "id": "langchain-output-parsers-advanced", "stack": ["langchain"], "tags": ["ai"], "files": [ { "path": "src/ai/output-parsers.ts", "template": "export const parsers = [];\n" } ] },
    { "id": "pinecone-namespace-list-minimal", "stack": ["pinecone"], "tags": ["vector"], "files": [ { "path": "src/vectors/pinecone-list.ts", "template": "export async function list(){ return []; }\n" } ] },
    { "id": "qdrant-sparse-vectors-minimal", "stack": ["qdrant"], "tags": ["vector"], "files": [ { "path": "src/vectors/qdrant-sparse.ts", "template": "export const sparse = {};\n" } ] },
    { "id": "weaviate-bm25-rerank-advanced", "stack": ["weaviate"], "tags": ["vector"], "files": [ { "path": "src/vectors/weaviate-bm25.ts", "template": "export const bm25 = {};\n" } ] },
    { "id": "milvus-ivf-flat-index-minimal", "stack": ["milvus"], "tags": ["vector"], "files": [ { "path": "src/vectors/milvus-ivf.ts", "template": "export const ivf = {};\n" } ] },
    { "id": "cloudflare-kv-namespaces-migration-minimal", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "src/cloudflare/kv-migrate.ts", "template": "export async function migrate(){ return true }\n" } ] },
    { "id": "cloudflare-workers-routes-minimal", "stack": ["cloudflare-workers"], "tags": ["edge"], "files": [ { "path": "src/cloudflare/routes.ts", "template": "export const routes = [];\n" } ] },
    { "id": "axe-core-component-a11y-test-minimal", "stack": ["testing"], "tags": ["a11y"], "files": [ { "path": "src/test/axe-component.ts", "template": "export async function test(){ return true }\n" } ] },
    { "id": "lighthouse-budget-config-minimal", "stack": ["testing"], "tags": ["performance"], "files": [ { "path": "lighthouse-budgets.json", "template": "{ }\n" } ] },
    { "id": "playwright-trace-viewer-minimal", "stack": ["playwright"], "tags": ["testing"], "files": [ { "path": "src/test/trace.ts", "template": "export const trace = {};\n" } ] },
    { "id": "vitest-coverage-thresholds-minimal", "stack": ["vitest"], "tags": ["testing"], "files": [ { "path": "src/test/coverage.ts", "template": "export const thresholds = {};\n" } ] },
    { "id": "unleash-strategy-user-segments-advanced", "stack": ["unleash"], "tags": ["flags"], "files": [ { "path": "src/flags/unleash-segments.ts", "template": "export const segments = [];\n" } ] },
    { "id": "launchdarkly-experiment-config-minimal", "stack": ["launchdarkly"], "tags": ["flags"], "files": [ { "path": "src/flags/ld-experiment.ts", "template": "export const exp = {};\n" } ] },
    { "id": "pino-transport-elasticsearch-minimal", "stack": ["pino"], "tags": ["logging"], "files": [ { "path": "src/logging/pino-elastic.ts", "template": "export const elastic = {};\n" } ] },
    { "id": "winston-logrotate-config-minimal", "stack": ["winston"], "tags": ["logging"], "files": [ { "path": "src/logging/winston-rotate.ts", "template": "export const rotate = {};\n" } ] },
    { "id": "docker-compose-dev-services-minimal", "stack": ["docker"], "tags": ["infra"], "files": [ { "path": "docker-compose.dev.yml", "template": "version: '3.9'\nservices: {}\n" } ] },
    { "id": "helm-templates-k8s-probes-minimal", "stack": ["helm"], "tags": ["infra"], "files": [ { "path": "deploy/templates/probe.yaml", "template": "# probe stub\n" } ] },
    { "id": "terraform-aws-vpc-minimal", "stack": ["terraform"], "tags": ["infra"], "files": [ { "path": "infra/vpc.tf", "template": "# vpc stub\n" } ] },
    { "id": "serverless-cors-authorizer-minimal", "stack": ["serverless"], "tags": ["infra"], "files": [ { "path": "serverless.authorizer.yml", "template": "service: authorizer\n" } ] },
    { "id": "redis-streams-consumer-group-minimal", "stack": ["redis"], "tags": ["cache", "stream"], "files": [ { "path": "src/cache/redis-streams.ts", "template": "export const xgroup = {};\n" } ] },
    { "id": "memcached-multi-get-minimal", "stack": ["memcached"], "tags": ["cache"], "files": [ { "path": "src/cache/memcached-mget.ts", "template": "export const mget = {};\n" } ] },
    { "id": "dotenv-multiple-env-files-minimal", "stack": ["dotenv"], "tags": ["config"], "files": [ { "path": "src/config/env-multi.ts", "template": "export const files = [];\n" } ] },
    { "id": "zod-nonempty-safe-secure", "stack": ["zod"], "tags": ["validation", "secure"], "files": [ { "path": "src/validation/nonempty.ts", "template": "export const NonEmpty = (s:string)=> !!s;\n" } ] },
    { "id": "storybook-visual-regression-guide-minimal", "stack": ["storybook"], "tags": ["testing"], "files": [ { "path": ".storybook/visual.md", "template": "# visual regression\n" } ] },
    { "id": "tailwind-aspect-ratio-plugin-minimal", "stack": ["tailwindcss"], "tags": ["style"], "files": [ { "path": "src/styles/aspect.css", "template": "/* aspect */\n" } ] },
    { "id": "radix-ui-context-menu-minimal", "stack": ["radix-ui"], "tags": ["ui"], "files": [ { "path": "src/ui/context-menu.tsx", "template": "export function ContextMenu(){ return null }\n" } ] },
    { "id": "shadcn-navigation-menu-minimal", "stack": ["shadcn"], "tags": ["ui"], "files": [ { "path": "src/ui/navigation-menu.tsx", "template": "export function NavigationMenu(){ return null }\n" } ] },
    { "id": "zustand-action-creators-minimal", "stack": ["zustand"], "tags": ["state"], "files": [ { "path": "src/state/actions.ts", "template": "export const actions = {};\n" } ] },
    { "id": "redux-rtk-query-cache-lifetimes-minimal", "stack": ["redux"], "tags": ["state"], "files": [ { "path": "src/redux/rtk-cache.ts", "template": "export const lifetimes = {};\n" } ] },
    { "id": "swr-serialize-params-advanced", "stack": ["swr"], "tags": ["frontend"], "files": [ { "path": "src/swr/serialize.ts", "template": "export const serialize = {};\n" } ] },
    { "id": "react-hook-form-field-array-minimal", "stack": ["react-hook-form"], "tags": ["forms"], "files": [ { "path": "src/forms/field-array.tsx", "template": "export function FieldArray(){ return null }\n" } ] }
  ]
}
