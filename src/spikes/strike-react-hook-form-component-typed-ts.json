{
  "id": "strike-react-hook-form-component-typed-ts",
  "name": "react-hook-form component typed ts",
  "version": "0.1.0",
  "stack": [
    "react-hook-form",
    "ts"
  ],
  "tags": [
    "component",
    "typed",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for react-hook-form component in ts (typed).",
  "params": [
    {
      "name": "app_name",
      "default": "react-hook-form-component-app"
    }
  ],
  "files": [
    {
      "path": "src/react-hook-form-component.ts",
      "template": "# Spike: react-hook-form component (ts)\n// Auto-generated spike stub for react-hook-form (component)\nexport function demo() {\n  console.log('use react-hook-form - component (typed)');\n}\n"
    },
    {
      "path": "src/components/LoginForm.tsx",
      "template": "import { useForm } from 'react-hook-form';\ntype Inputs = { email: string; password: string };\nexport function LoginForm(){ const { register, handleSubmit, formState:{ errors } } = useForm<Inputs>(); const onSubmit = (data: Inputs)=> console.log(data); return (<form onSubmit={handleSubmit(onSubmit)}><input {...register('email',{ required:true })} /><input type='password' {...register('password',{ required:true })} /><button type='submit'>Sign in</button>{errors.email && 'email req'}</form>); }\n"
    },
    {
      "path": "spikes/strike-react-hook-form-component-typed-ts.ts.txt",
      "template": "# Spike: react-hook-form component (ts)\n// Auto-generated spike stub for react-hook-form (component)\nexport function demo() {\n  console.log('use react-hook-form - component (typed)');\n}\n"
    },
    {
      "path": "spikes/strike-react-hook-form-component-typed-ts.md",
      "template": "# react-hook-form component (typed, ts)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}