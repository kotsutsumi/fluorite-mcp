{
  "id": "strike-reactflow-adapter-typed-py",
  "name": "reactflow adapter typed py",
  "version": "0.1.0",
  "stack": [
    "reactflow",
    "py"
  ],
  "tags": [
    "adapter",
    "typed",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for reactflow adapter in py (typed).",
  "params": [
    {
      "name": "app_name",
      "default": "reactflow-adapter-app"
    }
  ],
  "files": [
    {
      "path": "src/reactflow-adapter.py",
      "template": "# Spike: reactflow adapter (py)\n# Auto-generated spike stub for reactflow (adapter)\ndef demo():\n    print('use reactflow - adapter (typed)')\n"
    },
    {
      "path": "src/flow/api.js",
      "template": "export async function loadFlow(api = '/api/flow'){\n  const res = await fetch(api);\n  if (!res.ok) throw new Error('load_failed:' + res.status);\n  return res.json();\n}\nexport async function saveFlow(data: any, api = '/api/flow'){\n  const res = await fetch(api, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) });\n  if (!res.ok) throw new Error('save_failed:' + res.status);\n  return res.json();\n}\n"
    },
    {
      "path": "spikes/strike-reactflow-adapter-typed-py.py.txt",
      "template": "# Spike: reactflow adapter (py)\n# Auto-generated spike stub for reactflow (adapter)\ndef demo():\n    print('use reactflow - adapter (typed)')\n"
    },
    {
      "path": "spikes/strike-reactflow-adapter-typed-py.md",
      "template": "# reactflow adapter (typed, py)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}