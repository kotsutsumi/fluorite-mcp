{
  "id": "nextjs-lottie-scroll-minimal",
  "name": "Next.js Lottie スクロール連動 最小",
  "version": "1.0.0",
  "stack": ["nextjs", "react", "lottie"],
  "tags": ["nextjs", "app-router", "client", "lottie", "scroll"],
  "description": "スクロール進捗に応じて Lottie のフレームを停止表示させる最小例。",
  "params": [
    { "name": "lottie_url", "default": "https://assets9.lottiefiles.com/packages/lf20_5ngs2ksb.json" }
  ],
  "files": [
    {
      "path": "app/lottie-scroll/page.tsx",
      "template": "'use client';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Lottie, { LottieRefCurrentProps } from 'lottie-react';\n\nexport default function Page(){\n  const lottieRef = useRef<LottieRefCurrentProps>(null);\n  const [data, setData] = useState<any | null>(null);\n  const url = process.env.NEXT_PUBLIC_LOTTIE_URL || '{{lottie_url}}';\n\n  useEffect(() => {\n    let alive = true;\n    fetch(url).then(r => r.json()).then(json => { if (alive) setData(json); });\n    return () => { alive = false; };\n  }, [url]);\n\n  useEffect(() => {\n    const onScroll = () => {\n      const doc = document.documentElement;\n      const scrollTop = doc.scrollTop;\n      const max = (doc.scrollHeight - doc.clientHeight) || 1;\n      const progress = Math.min(1, Math.max(0, scrollTop / max));\n      const totalFrames = (lottieRef.current as any)?.getDuration?.(true) || 300;\n      const frame = Math.floor(totalFrames * progress);\n      (lottieRef.current as any)?.goToAndStop?.(frame, true);\n    };\n    window.addEventListener('scroll', onScroll, { passive: true });\n    onScroll();\n    return () => window.removeEventListener('scroll', onScroll as any);\n  }, []);\n\n  return (\n    <main style={{ fontFamily: 'sans-serif' }}>\n      <div style={{ height: '120vh', display: 'grid', placeItems: 'center' }}>\n        <h1>Scroll down</h1>\n      </div>\n      <section style={{ minHeight: '100vh', display: 'grid', placeItems: 'center' }}>\n        <div style={{ width: 320, height: 320, border: '1px solid #ddd', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          {data ? (\n            <Lottie lottieRef={lottieRef} animationData={data} loop={false} autoplay={false} style={{ width: 320, height: 320 }} />\n          ) : 'Loading...'}\n        </div>\n        <p style={{ opacity: 0.6, marginTop: 12 }}>スクロールでフレームが進みます</p>\n      </section>\n      <div style={{ height: '120vh' }} />\n    </main>\n  );\n}\n"
    }
  ]
}

