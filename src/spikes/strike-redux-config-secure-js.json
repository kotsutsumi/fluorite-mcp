{
  "id": "strike-redux-config-secure-js",
  "name": "redux config secure js",
  "version": "0.1.0",
  "stack": [
    "redux",
    "js"
  ],
  "tags": [
    "config",
    "secure",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for redux config in js (secure).",
  "params": [
    {
      "name": "app_name",
      "default": "redux-config-app"
    }
  ],
  "files": [
    {
      "path": "src/redux-config.js",
      "template": "# Spike: redux config (js)\n// Auto-generated spike stub for redux (config)\nmodule.exports = function demo(){\n  console.log('use redux - config (secure)');\n};\n"
    },
    {
      "path": "src/store/store.ts",
      "template": "import { configureStore } from '@reduxjs/toolkit';\nimport counter from './counterSlice';\nexport const store = configureStore({ reducer: { counter } });\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"
    },
    {
      "path": "src/store/counterSlice.ts",
      "template": "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\ninterface State { value: number }\nconst initialState: State = { value: 0 };\nconst slice = createSlice({ name: 'counter', initialState, reducers: { inc: (s)=> { s.value += 1; }, add: (s, a: PayloadAction<number>)=> { s.value += a.payload; } } });\nexport const { inc, add } = slice.actions;\nexport default slice.reducer;\n"
    },
    {
      "path": "spikes/strike-redux-config-secure-js.js.txt",
      "template": "# Spike: redux config (js)\n// Auto-generated spike stub for redux (config)\nmodule.exports = function demo(){\n  console.log('use redux - config (secure)');\n};\n"
    },
    {
      "path": "spikes/strike-redux-config-secure-js.md",
      "template": "# redux config (secure, js)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}