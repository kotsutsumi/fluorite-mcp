{
  "id": "strike-reactflow-component-testing-py",
  "name": "reactflow component testing py",
  "version": "0.1.0",
  "stack": [
    "reactflow",
    "py"
  ],
  "tags": [
    "component",
    "testing",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for reactflow component in py (testing).",
  "params": [
    {
      "name": "app_name",
      "default": "reactflow-component-app"
    }
  ],
  "files": [
    {
      "path": "src/reactflow-component.py",
      "template": "# Spike: reactflow component (py)\n# Auto-generated spike stub for reactflow (component)\ndef demo():\n    print('use reactflow - component (testing)')\n"
    },
    {
      "path": "src/components/Flow.jsx",
      "template": "import React from 'react';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nconst initialNodes = [\n  { id: '1', position: { x: 0, y: 0 }, data: { label: 'Node 1' } },\n  { id: '2', position: { x: 200, y: 100 }, data: { label: 'Node 2' } }\n];\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2' }\n];\n\nexport default function Flow(){\n  return (\n    <div style={{ width: '100%', height: 400 }}>\n      <ReactFlow nodes={initialNodes} edges={initialEdges}>\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n}\n"
    },
    {
      "path": "src/components/Flow.test.jsx",
      "template": "// NOTE: In real apps, prefer @testing-library/react\nimport { describe, it, expect } from 'vitest';\ndescribe('Flow', ()=>{ it('renders', ()=>{ expect(true).toBe(true); }); });\n"
    },
    {
      "path": "src/components/Flow.rtl.test.jsx",
      "template": "// Placeholder for @testing-library/react based tests\n// import { render, screen } from '@testing-library/react'\n// import Flow from './Flow'\n// test('flow renders', ()=>{ /* render(<Flow />); expect(screen.getByText(/React Flow/)).toBeInTheDocument(); */ })\n"
    },
    {
      "path": "spikes/strike-reactflow-component-testing-py.py.txt",
      "template": "# Spike: reactflow component (py)\n# Auto-generated spike stub for reactflow (component)\ndef demo():\n    print('use reactflow - component (testing)')\n"
    },
    {
      "path": "spikes/strike-reactflow-component-testing-py.md",
      "template": "# reactflow component (testing, py)\n\nThis is an auto-generated spike template.\n"
    },
    {
      "path": "spikes/strike-reactflow-component-testing-py_test.py",
      "template": "def test_demo():\n    assert True\n"
    }
  ],
  "patches": []
}