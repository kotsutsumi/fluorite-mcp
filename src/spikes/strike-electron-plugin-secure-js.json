{
  "id": "strike-electron-plugin-secure-js",
  "name": "electron plugin secure js",
  "version": "0.1.0",
  "stack": [
    "electron",
    "js"
  ],
  "tags": [
    "plugin",
    "secure",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for electron plugin in js (secure).",
  "params": [
    {
      "name": "app_name",
      "default": "electron-plugin-app"
    }
  ],
  "files": [
    {
      "path": "main.js",
      "template": "const { app, BrowserWindow, ipcMain } = require('electron');\nconst path = require('path');\nfunction createWindow(){ const win = new BrowserWindow({ width: 800, height: 600, webPreferences: { preload: path.join(__dirname, 'preload.js'), contextIsolation: true, nodeIntegration: false } }); win.loadFile('index.html'); }\nipcMain.handle('ping', async (_e, name)=> 'Hello ' + name);\napp.whenReady().then(createWindow);\n"
    },
    {
      "path": "preload.js",
      "template": "const { contextBridge, ipcRenderer } = require('electron');\ncontextBridge.exposeInMainWorld('api', { ping: (name)=> ipcRenderer.invoke('ping', name) });\n"
    },
    {
      "path": "index.html",
      "template": "<!doctype html><html><body><h1>IPC</h1><button id=btn>Ping</button><script>document.getElementById('btn').onclick=()=> window.api.ping('World').then(alert)</script></body></html>\n"
    },
    {
      "path": "spikes/strike-electron-plugin-secure-js.js.txt",
      "template": "# Spike: electron plugin (js)\n// Auto-generated spike stub for electron (plugin)\nmodule.exports = function demo(){\n  console.log('use electron - plugin (secure)');\n};\n"
    },
    {
      "path": "spikes/strike-electron-plugin-secure-js.md",
      "template": "# electron plugin (secure, js)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}