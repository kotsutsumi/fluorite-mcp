{
  "id": "fastapi-oauth2-password",
  "name": "FastAPI OAuth2 Password Flow",
  "version": "1.0.0",
  "stack": ["python", "fastapi", "oauth2"],
  "tags": ["auth", "oauth2"],
  "description": "Minimal OAuth2 password flow with bearer token.",
  "params": [
    { "name": "project_name", "default": "fastapi-oauth" }
  ],
  "files": [
    {
      "path": "{{project_name}}/requirements.txt",
      "template": "fastapi\nuvicorn\npython-multipart\n"
    },
    {
      "path": "{{project_name}}/main.py",
      "template": "from fastapi import FastAPI, Depends, HTTPException\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\n\napp = FastAPI()\noauth2_scheme = OAuth2PasswordBearer(tokenUrl='token')\n\n@app.post('/token')\nasync def token(form: OAuth2PasswordRequestForm = Depends()):\n    if not form.username or not form.password:\n        raise HTTPException(400, 'invalid creds')\n    return { 'access_token': 'demo-token', 'token_type': 'bearer' }\n\n@app.get('/secure')\nasync def secure(token: str = Depends(oauth2_scheme)):\n    if token != 'demo-token':\n        raise HTTPException(401, 'invalid token')\n    return { 'ok': True }\n"
    }
  ],
  "patches": []
}

