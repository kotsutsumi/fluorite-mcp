{
  "id": "nextjs-lottie-segments-minimal",
  "name": "Next.js Lottie セグメント再生 最小",
  "version": "1.0.0",
  "stack": ["nextjs", "react", "lottie"],
  "tags": ["nextjs", "app-router", "client", "lottie", "segments"],
  "description": "Lottie アニメーションをセグメント（区間）ごとに再生する最小例。ボタンで任意開始フレームにジャンプ。",
  "params": [
    { "name": "lottie_url", "default": "https://assets9.lottiefiles.com/packages/lf20_5ngs2ksb.json" }
  ],
  "files": [
    {
      "path": "app/lottie-segments/page.tsx",
      "template": "'use client';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Lottie, { LottieRefCurrentProps } from 'lottie-react';\n\nexport default function Page(){\n  const lottieRef = useRef<LottieRefCurrentProps>(null);\n  const [data, setData] = useState<any | null>(null);\n  const url = process.env.NEXT_PUBLIC_LOTTIE_URL || '{{lottie_url}}';\n\n  useEffect(() => {\n    let alive = true;\n    fetch(url).then(r => r.json()).then(json => { if (alive) setData(json); });\n    return () => { alive = false; };\n  }, [url]);\n\n  const jump = (frame: number) => {\n    (lottieRef.current as any)?.goToAndPlay?.(frame, true);\n  };\n\n  return (\n    <main style={{ fontFamily: 'sans-serif', padding: 24 }}>\n      <h1>Lottie Segments (Next.js)</h1>\n      <p>例として 0 / 60 / 120 フレームからの再生ボタンを用意しています。</p>\n      <div style={{ display: 'flex', gap: 8, marginBottom: 12 }}>\n        <button onClick={() => jump(0)}>Intro</button>\n        <button onClick={() => jump(60)}>Main</button>\n        <button onClick={() => jump(120)}>Outro</button>\n      </div>\n      <div style={{ width: 320, height: 320, border: '1px solid #ddd', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        {data ? (\n          <Lottie lottieRef={lottieRef} animationData={data} loop autoplay style={{ width: 320, height: 320 }} />\n        ) : 'Loading...'}\n      </div>\n    </main>\n  );\n}\n"
    }
  ]
}
