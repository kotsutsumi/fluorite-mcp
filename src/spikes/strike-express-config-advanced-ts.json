{
  "id": "strike-express-config-advanced-ts",
  "name": "express config advanced ts",
  "version": "0.1.0",
  "stack": [
    "express",
    "ts"
  ],
  "tags": [
    "config",
    "advanced",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for express config in ts (advanced).",
  "params": [
    {
      "name": "app_name",
      "default": "express-config-app"
    }
  ],
  "files": [
    {
      "path": "src/express-config.ts",
      "template": "# Spike: express config (ts)\n// Auto-generated spike stub for express (config)\nexport function demo() {\n  console.log('use express - config (advanced)');\n}\n"
    },
    {
      "path": "src/express/security.ts",
      "template": "import express from 'express';\nimport helmet from 'helmet';\nimport cors from 'cors';\nexport function createApp(){ const app = express(); app.use(helmet()); app.use(cors()); return app; }\n"
    },
    {
      "path": "src/otel/tracer.ts",
      "template": "import { NodeSDK } from '@opentelemetry/sdk-node';\nimport { ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { SimpleSpanProcessor } from '@opentelemetry/sdk-trace-base';\nexport function setupOtel(){ const sdk = new NodeSDK(); (sdk as any)._tracerProvider.addSpanProcessor(new SimpleSpanProcessor(new ConsoleSpanExporter())); sdk.start(); return sdk; }\n"
    },
    {
      "path": "src/otel/instrument.ts",
      "template": "import { setupOtel } from './tracer';\nconst sdk = setupOtel();\nprocess.on('SIGTERM', ()=> sdk.shutdown().finally(()=> process.exit(0)));\n"
    },
    {
      "path": "spikes/strike-express-config-advanced-ts.ts.txt",
      "template": "# Spike: express config (ts)\n// Auto-generated spike stub for express (config)\nexport function demo() {\n  console.log('use express - config (advanced)');\n}\n"
    },
    {
      "path": "spikes/strike-express-config-advanced-ts.md",
      "template": "# express config (advanced, ts)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}