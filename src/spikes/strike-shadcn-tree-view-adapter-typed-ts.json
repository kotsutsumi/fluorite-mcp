{
  "id": "strike-shadcn-tree-view-adapter-typed-ts",
  "name": "shadcn-tree-view adapter typed ts",
  "version": "0.1.0",
  "stack": [
    "shadcn-tree-view",
    "ts"
  ],
  "tags": [
    "adapter",
    "typed",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for shadcn-tree-view adapter in ts (typed).",
  "params": [
    {
      "name": "app_name",
      "default": "shadcn-tree-view-adapter-app"
    }
  ],
  "files": [
    {
      "path": "src/shadcn-tree-view-adapter.ts",
      "template": "# Spike: shadcn-tree-view adapter (ts)\n// Auto-generated spike stub for shadcn-tree-view (adapter)\nexport function demo() {\n  console.log('use shadcn-tree-view - adapter (typed)');\n}\n"
    },
    {
      "path": "src/treeview/api.ts",
      "template": "export async function loadTree(api = '/api/tree'){\n  const res = await fetch(api); if (!res.ok) throw new Error('load_failed'); return res.json();\n}\nexport async function saveTree(data: any, api = '/api/tree'){\n  const res = await fetch(api, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) });\n  if (!res.ok) throw new Error('save_failed'); return res.json();\n}\n"
    },
    {
      "path": "spikes/strike-shadcn-tree-view-adapter-typed-ts.ts.txt",
      "template": "# Spike: shadcn-tree-view adapter (ts)\n// Auto-generated spike stub for shadcn-tree-view (adapter)\nexport function demo() {\n  console.log('use shadcn-tree-view - adapter (typed)');\n}\n"
    },
    {
      "path": "spikes/strike-shadcn-tree-view-adapter-typed-ts.md",
      "template": "# shadcn-tree-view adapter (typed, ts)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}