{
  "id": "tanstack-table-sorting",
  "name": "TanStack Table Sorting (React)",
  "version": "1.0.0",
  "stack": ["react", "tanstack-table"],
  "tags": ["table", "sorting"],
  "description": "Enable sorting state and headers.",
  "params": [{ "name": "app_name", "default": "react-app" }],
  "files": [
    { "path": "{{app_name}}/src/TableSorting.tsx", "template": "import * as React from 'react';\nimport { useReactTable, getCoreRowModel, getSortedRowModel, flexRender, createColumnHelper } from '@tanstack/react-table';\nconst ch = createColumnHelper<{ id:number; name:string }>();\nconst columns = [ ch.accessor('id',{ header: 'ID' }), ch.accessor('name',{ header: 'Name' }) ];\nconst data = [{id:2,name:'B'},{id:1,name:'A'}];\nexport function TableSorting(){ const [sorting,setSorting] = React.useState([] as any); const table = useReactTable({ data, columns, state:{ sorting }, onSortingChange: setSorting, getCoreRowModel: getCoreRowModel(), getSortedRowModel: getSortedRowModel() });\n  return (<table><thead>{table.getHeaderGroups().map(hg=>(<tr key={hg.id}>{hg.headers.map(h=>(<th key={h.id} onClick={h.column.getToggleSortingHandler()}>{flexRender(h.column.columnDef.header, h.getContext())}</th>))}</tr>))}</thead><tbody>{table.getRowModel().rows.map(r=>(<tr key={r.id}>{r.getVisibleCells().map(c=>(<td key={c.id}>{flexRender(c.column.columnDef.cell, c.getContext())}</td>))}</tr>))}</tbody></table>); }\n" },
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"private\": true, \"dependencies\": { \"react\": \"latest\", \"react-dom\": \"latest\", \"@tanstack/react-table\": \"latest\" } }\n" }
  ],
  "patches": []
}

