{
  "id": "langchain-text-splitter-minimal",
  "name": "LangChain Text Splitter + Embeddings (Node)",
  "version": "1.0.0",
  "stack": ["node", "langchain", "openai"],
  "tags": ["rag", "preprocess"],
  "description": "Split long text into chunks, embed via OpenAI, and print chunk count.",
  "params": [
    { "name": "app_name", "default": "lc-text-splitter" }
  ],
  "files": [
    { "path": "{{app_name}}/index.mjs", "template": "import { RecursiveCharacterTextSplitter } from 'langchain/text_splitter';\nimport { OpenAIEmbeddings } from '@langchain/openai';\nconst text = 'Hello world. '.repeat(50);\nconst splitter = new RecursiveCharacterTextSplitter({ chunkSize: 50, chunkOverlap: 10 });\nconst docs = await splitter.createDocuments([text]);\nconst embeddings = new OpenAIEmbeddings({ apiKey: process.env.OPENAI_API_KEY });\nconst vecs = await embeddings.embedDocuments(docs.map(d => d.pageContent));\nconsole.log({ chunks: docs.length, dims: vecs[0].length });\n" },
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"type\": \"module\", \"private\": true, \"dependencies\": { \"@langchain/openai\": \"latest\", \"langchain\": \"latest\" } }\n" },
    { "path": "{{app_name}}/.env.example", "template": "OPENAI_API_KEY=sk-...\n" }
  ],
  "patches": []
}

