{
  "id": "strike-redis-service-secure-py",
  "name": "redis service secure py",
  "version": "0.1.0",
  "stack": [
    "redis",
    "py"
  ],
  "tags": [
    "service",
    "secure",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for redis service in py (secure).",
  "params": [
    {
      "name": "app_name",
      "default": "redis-service-app"
    },
    {
      "name": "redisUrl",
      "required": false,
      "description": "Redis 接続URL",
      "default": "redis://localhost:6379"
    }
  ],
  "files": [
    {
      "path": "src/redis-service.py",
      "template": "# Spike: redis service (py)\n# Auto-generated spike stub for redis (service)\ndef demo():\n    print('use redis - service (secure)')\n"
    },
    {
      "path": "src/cache/redis.ts",
      "template": "import { createClient } from 'redis';\nconst url = process.env.REDIS_URL || 'redis://localhost:6379';\nexport const redis = createClient({ url });\nredis.on('error', (e)=> console.error('Redis error', e));\nexport async function connect(){ if(!redis.isOpen) await redis.connect(); }\nexport async function get(key: string){ await connect(); return redis.get(key); }\nexport async function set(key: string, val: string, ttl?: number){ await connect(); if (ttl) return redis.set(key, val, { EX: ttl }); return redis.set(key, val); }\n"
    },
    {
      "path": "src/redis/client.ts",
      "template": "export function redis(){ return { url: process.env.REDIS_URL || 'redis://localhost:6379' }; }\n"
    },
    {
      "path": "spikes/strike-redis-service-secure-py.py.txt",
      "template": "# Spike: redis service (py)\n# Auto-generated spike stub for redis (service)\ndef demo():\n    print('use redis - service (secure)')\n"
    },
    {
      "path": "spikes/strike-redis-service-secure-py.md",
      "template": "# redis service (secure, py)\n\nThis is an auto-generated spike template.\n"
    }
  ],
  "patches": []
}