{
  "id": "openrouter-json-mode-minimal",
  "name": "OpenRouter JSON-like Output Minimal (Node)",
  "version": "1.0.0",
  "stack": ["node", "openrouter"],
  "tags": ["llm", "json"],
  "description": "Request JSON output via OpenRouter and best-effort parse.",
  "params": [{ "name": "app_name", "default": "openrouter-json" }, { "name": "model", "default": "mistralai/mistral-7b-instruct" }],
  "files": [
    { "path": "{{app_name}}/index.mjs", "template": "const res = await fetch('https://openrouter.ai/api/v1/chat/completions', { method: 'POST', headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${process.env.OPENROUTER_API_KEY}` }, body: JSON.stringify({ model: process.env.OPENROUTER_MODEL || '{{model}}', messages: [{ role: 'user', content: 'Return {\\"greeting\\": \\\"hello\\\"} as JSON only.' }] }) });\nconst json = await res.json();\ntry { console.log(JSON.parse(json.choices?.[0]?.message?.content||'{}')); } catch (e) { console.log(json.choices?.[0]?.message?.content); }\n" },
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"type\": \"module\", \"private\": true }\n" },
    { "path": "{{app_name}}/.env.example", "template": "OPENROUTER_API_KEY=...\nOPENROUTER_MODEL={{model}}\n" }
  ],
  "patches": []
}

