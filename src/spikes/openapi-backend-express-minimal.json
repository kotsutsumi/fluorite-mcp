{
  "id": "openapi-backend-express-minimal",
  "name": "openapi-backend ルータ + Express",
  "version": "1.0.0",
  "stack": ["openapi", "express"],
  "tags": ["api", "router"],
  "description": "openapi-backend でOpenAPI定義に基づくルーティング（最小）。",
  "params": [ { "name": "app_name", "default": "openapi-backend" }, { "name": "port", "default": "3000" } ],
  "files": [
    { "path": "{{app_name}}/openapi.yaml", "template": "openapi: 3.0.0\ninfo: { title: API, version: '1.0.0' }\npaths:\n  /hello:\n    get:\n      responses:\n        '200': { description: ok }\n" },
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"private\": true, \"scripts\": { \"start\": \"node index.js\" }, \"dependencies\": { \"express\": \"latest\", \"openapi-backend\": \"latest\" } }\n" },
    { "path": "{{app_name}}/index.js", "template": "const express = require('express');\nconst OpenAPIBackend = require('openapi-backend').default;\nconst api = new OpenAPIBackend({ definition: './openapi.yaml' });\napi.register({ getHello: (c, req, res) => res.json({ hello: 'world' }) });\napi.register('validationFail', (c, req, res) => res.status(400).json({ error: c.validation.errors }));\napi.init();\nconst app = express();\napp.use(express.json());\napp.use((req,res) => api.handleRequest(req, req, res));\napp.listen(Number('{{port}}'), ()=>console.log('listening'));\n" }
  ],
  "patches": []
}

