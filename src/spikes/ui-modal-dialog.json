{
  "id": "ui-modal-dialog",
  "name": "Modal Dialog Component with Forms",
  "version": "1.0.0",
  "stack": ["react", "nextjs", "tailwindcss", "shadcn-ui"],
  "tags": ["ui", "modal", "dialog", "form", "tailwind", "shadcn", "responsive"],
  "description": "A reusable modal dialog component with form integration, validation, and animations using TailwindCSS v4.1+ and shadcn/ui v2+",
  "params": [
    {
      "name": "framework",
      "required": false,
      "description": "Target framework (react, nextjs)",
      "default": "react"
    },
    {
      "name": "componentName",
      "required": false,
      "description": "Component name",
      "default": "ModalDialog"
    },
    {
      "name": "formType",
      "required": false,
      "description": "Type of form to include (contact, feedback, settings)",
      "default": "contact"
    }
  ],
  "files": [
    {
      "path": "components/{{componentName}}.tsx",
      "template": "\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogClose,\n} from \"@/components/ui/dialog\"\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useToast } from \"@/components/ui/use-toast\"\nimport { Loader2 } from \"lucide-react\"\n\ninterface {{componentName}}Props {\n  trigger?: React.ReactNode\n  title?: string\n  description?: string\n}\n\nexport function {{componentName}}({\n  trigger,\n  title = \"{{#if formType}}{{#if (eq formType 'contact')}}Contact Us{{else if (eq formType 'feedback')}}Send Feedback{{else}}Settings{{/if}}{{else}}Dialog Title{{/if}}\",\n  description = \"{{#if formType}}{{#if (eq formType 'contact')}}Fill out the form below and we'll get back to you soon.{{else if (eq formType 'feedback')}}We value your feedback. Let us know what you think.{{else}}Update your preferences and settings.{{/if}}{{else}}Dialog description here{{/if}}\"\n}: {{componentName}}Props) {\n  const [open, setOpen] = React.useState(false)\n  const [loading, setLoading] = React.useState(false)\n  const { toast } = useToast()\n  \n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    setLoading(true)\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    \n    setLoading(false)\n    setOpen(false)\n    \n    toast({\n      title: \"Success!\",\n      description: \"Your {{formType}} has been submitted successfully.\",\n    })\n  }\n\n  return (\n    <>\n      <Dialog open={open} onOpenChange={setOpen}>\n        <DialogTrigger asChild>\n          {trigger || <Button variant=\"outline\">Open {{formType}} Form</Button>}\n        </DialogTrigger>\n        <DialogContent className=\"sm:max-w-[425px]\">\n          <DialogHeader>\n            <DialogTitle>{title}</DialogTitle>\n            <DialogDescription>{description}</DialogDescription>\n          </DialogHeader>\n          <form onSubmit={handleSubmit}>\n            <div className=\"grid gap-4 py-4\">\n              {{#if (eq formType 'contact')}}\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"name\">Name</Label>\n                <Input\n                  id=\"name\"\n                  placeholder=\"John Doe\"\n                  required\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"john@example.com\"\n                  required\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"subject\">Subject</Label>\n                <Input\n                  id=\"subject\"\n                  placeholder=\"How can we help?\"\n                  required\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"message\">Message</Label>\n                <Textarea\n                  id=\"message\"\n                  placeholder=\"Tell us more...\"\n                  className=\"min-h-[100px]\"\n                  required\n                  disabled={loading}\n                />\n              </div>\n              {{else if (eq formType 'feedback')}}\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"type\">Feedback Type</Label>\n                <Select disabled={loading}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectGroup>\n                      <SelectLabel>Type</SelectLabel>\n                      <SelectItem value=\"bug\">Bug Report</SelectItem>\n                      <SelectItem value=\"feature\">Feature Request</SelectItem>\n                      <SelectItem value=\"improvement\">Improvement</SelectItem>\n                      <SelectItem value=\"other\">Other</SelectItem>\n                    </SelectGroup>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"feedback\">Your Feedback</Label>\n                <Textarea\n                  id=\"feedback\"\n                  placeholder=\"Share your thoughts...\"\n                  className=\"min-h-[150px]\"\n                  required\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email (optional)</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"your@email.com\"\n                  disabled={loading}\n                />\n              </div>\n              {{else}}\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  id=\"username\"\n                  defaultValue=\"@johndoe\"\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  defaultValue=\"john@example.com\"\n                  disabled={loading}\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"notifications\">Notifications</Label>\n                <Select defaultValue=\"all\" disabled={loading}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All notifications</SelectItem>\n                    <SelectItem value=\"mentions\">Mentions only</SelectItem>\n                    <SelectItem value=\"none\">None</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              {{/if}}\n            </div>\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button type=\"button\" variant=\"outline\" disabled={loading}>\n                  Cancel\n                </Button>\n              </DialogClose>\n              <Button type=\"submit\" disabled={loading}>\n                {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Submit\n              </Button>\n            </DialogFooter>\n          </form>\n        </DialogContent>\n      </Dialog>\n\n      {/* Alert Dialog Example */}\n      <AlertDialog>\n        <AlertDialogTrigger asChild>\n          <Button variant=\"destructive\" className=\"ml-2\">\n            Delete Account\n          </Button>\n        </AlertDialogTrigger>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete your\n              account and remove your data from our servers.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction className=\"bg-destructive text-destructive-foreground hover:bg-destructive/90\">\n              Yes, delete my account\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  )\n}\n"
    }
  ]
}