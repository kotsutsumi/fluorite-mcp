{
  "id": "ui-login-form-modern",
  "name": "Modern Login Form with Social Auth",
  "version": "1.0.0",
  "stack": ["react", "nextjs", "tailwindcss", "shadcn-ui"],
  "tags": ["ui", "auth", "form", "tailwind", "shadcn", "social", "responsive", "dark-mode"],
  "description": "A modern, responsive login form with social authentication buttons, built with TailwindCSS v4.1+ and shadcn/ui v2+",
  "params": [
    {
      "name": "framework",
      "required": false,
      "description": "Target framework (react, nextjs, vue)",
      "default": "react"
    },
    {
      "name": "componentName",
      "required": false,
      "description": "Component name",
      "default": "LoginForm"
    },
    {
      "name": "includeSocial",
      "required": false,
      "description": "Include social auth buttons",
      "default": "true"
    },
    {
      "name": "darkMode",
      "required": false,
      "description": "Include dark mode support",
      "default": "true"
    }
  ],
  "files": [
    {
      "path": "components/{{componentName}}.tsx",
      "template": "\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Icons } from \"@/components/icons\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\n\ninterface {{componentName}}Props extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport function {{componentName}}({ className, ...props }: {{componentName}}Props) {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n  const [error, setError] = React.useState<string | null>(null)\n\n  async function onSubmit(event: React.SyntheticEvent) {\n    event.preventDefault()\n    setIsLoading(true)\n    setError(null)\n\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 3000)\n  }\n\n  return (\n    <div className={cn(\"flex items-center justify-center min-h-screen\", className)} {...props}>\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl text-center\">Welcome back</CardTitle>\n          <CardDescription className=\"text-center\">\n            Enter your email and password to sign in to your account\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={onSubmit}>\n            <div className=\"grid gap-4\">\n              {{#if includeSocial}}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Button variant=\"outline\" type=\"button\" disabled={isLoading}>\n                  <Icons.gitHub className=\"mr-2 h-4 w-4\" />\n                  GitHub\n                </Button>\n                <Button variant=\"outline\" type=\"button\" disabled={isLoading}>\n                  <Icons.google className=\"mr-2 h-4 w-4\" />\n                  Google\n                </Button>\n              </div>\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <span className=\"w-full border-t\" />\n                </div>\n                <div className=\"relative flex justify-center text-xs uppercase\">\n                  <span className=\"bg-background px-2 text-muted-foreground\">Or continue with</span>\n                </div>\n              </div>\n              {{/if}}\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"m@example.com\"\n                  autoCapitalize=\"none\"\n                  autoComplete=\"email\"\n                  autoCorrect=\"off\"\n                  disabled={isLoading}\n                  required\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <a href=\"#\" className=\"text-sm text-muted-foreground hover:text-primary\">\n                    Forgot password?\n                  </a>\n                </div>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  autoCapitalize=\"none\"\n                  autoComplete=\"current-password\"\n                  disabled={isLoading}\n                  required\n                />\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox id=\"remember\" />\n                <Label htmlFor=\"remember\" className=\"text-sm font-normal\">\n                  Remember me\n                </Label>\n              </div>\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading && (\n                  <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" />\n                )}\n                Sign In\n              </Button>\n            </div>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col gap-2\">\n          <p className=\"text-center text-sm text-muted-foreground\">\n            Don't have an account?{\" \"}\n            <a href=\"#\" className=\"underline underline-offset-4 hover:text-primary\">\n              Sign up\n            </a>\n          </p>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n"
    },
    {
      "path": "components/icons.tsx",
      "template": "export const Icons = {\n  spinner: (props: any) => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <path d=\"M21 12a9 9 0 1 1-6.219-8.56\" />\n    </svg>\n  ),\n  gitHub: (props: any) => (\n    <svg viewBox=\"0 0 438.549 438.549\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365\n        c-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63\n        c0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996\n        c2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136\n        c-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559\n        c-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559\n        c-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997\n        c-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851\n        c5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136\n        c6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41\n        c-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126\n        c-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817\n        c-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994\n        c5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849\n        c7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24\n        c15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979\n        c-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146\n        c9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995\n        c44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906\n        C438.536,184.851,428.728,148.168,409.132,114.573z\"\n      />\n    </svg>\n  ),\n  google: (props: any) => (\n    <svg role=\"img\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n      />\n    </svg>\n  )\n}\n"
    },
    {
      "path": "lib/utils.ts",
      "template": "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
    }
  ]
}