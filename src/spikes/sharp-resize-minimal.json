{
  "id": "sharp-resize-minimal",
  "name": "Sharp Resize Minimal",
  "version": "1.0.0",
  "stack": ["node", "sharp"],
  "tags": ["media"],
  "description": "Resize a sample buffer to 100x100 PNG.",
  "params": [ { "name": "app_name", "default": "sharp-demo" } ],
  "files": [
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"private\": true, \"scripts\": { \"start\": \"node run.js\" }, \"dependencies\": { \"sharp\": \"latest\" } }\n" },
    { "path": "{{app_name}}/run.js", "template": "const sharp = require('sharp');\n(async () => {\n  const red = Buffer.from([\n    0x89,0x50,0x4E,0x47,0x0D,0x0A,0x1A,0x0A,0,0,0,0x0D,0x49,0x48,0x44,0x52,0,0,0,1,0,0,0,1,8,2,0,0,0,0x90,0x77,0x53,0xDE,0,0,0,0x0A,0x49,0x44,0x41,0x54,0x08,0xD7,0x63,0xF8,0xCF,0xC0,0,0,0x04,0,0x01,0xE2,0x26,0x05,0x9B,0,0,0,0x00,0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82\n  ]);\n  const out = await sharp(red).resize(100,100, { fit: 'contain', background: { r:255,g:255,b:255,alpha:1 } }).png().toBuffer();\n  console.log('resized bytes', out.length);\n})();\n" }
  ],
  "patches": []
}

