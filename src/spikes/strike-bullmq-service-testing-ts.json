{
  "id": "strike-bullmq-service-testing-ts",
  "name": "bullmq service testing ts",
  "version": "0.1.0",
  "stack": [
    "bullmq",
    "ts"
  ],
  "tags": [
    "service",
    "testing",
    "generated",
    "strike"
  ],
  "description": "Auto-generated spike for bullmq service in ts (testing).",
  "params": [
    {
      "name": "app_name",
      "default": "bullmq-service-app"
    }
  ],
  "files": [
    {
      "path": "src/bullmq-service.ts",
      "template": "# Spike: bullmq service (ts)\n// Auto-generated spike stub for bullmq (service)\nexport function demo() {\n  console.log('use bullmq - service (testing)');\n}\n"
    },
    {
      "path": "src/queue/queue.ts",
      "template": "import { Queue } from 'bullmq';\nexport const queue = new Queue('jobs', { connection: { host: '127.0.0.1', port: 6379 } });\nexport async function enqueue(name: string, data: any){ return queue.add(name, data); }\n"
    },
    {
      "path": "src/queue/worker.ts",
      "template": "import { Worker } from 'bullmq';\nexport const worker = new Worker('jobs', async (job)=>{ console.log('job', job.name, job.data); }, { connection: { host: '127.0.0.1', port: 6379 } });\n"
    },
    {
      "path": "spikes/strike-bullmq-service-testing-ts.ts.txt",
      "template": "# Spike: bullmq service (ts)\n// Auto-generated spike stub for bullmq (service)\nexport function demo() {\n  console.log('use bullmq - service (testing)');\n}\n"
    },
    {
      "path": "spikes/strike-bullmq-service-testing-ts.md",
      "template": "# bullmq service (testing, ts)\n\nThis is an auto-generated spike template.\n"
    },
    {
      "path": "spikes/strike-bullmq-service-testing-ts.test.ts",
      "template": "describe('demo', ()=>{ it('works', ()=>{ expect(true).toBe(true); }); });\n"
    }
  ],
  "patches": []
}