{
  "id": "nextjs-lottie-ssr-best-practices",
  "name": "Next.js Lottie SSR ベストプラクティス",
  "version": "1.0.0",
  "stack": ["nextjs", "react", "lottie"],
  "tags": ["nextjs", "app-router", "ssr", "client", "lottie", "best-practices"],
  "description": "SSR環境でのLottie利用の要点: client-only分離、dynamic import(ssr:false)、Reduced Motion、フェッチキャンセル等の最小実装。",
  "params": [
    { "name": "lottie_url", "default": "https://assets9.lottiefiles.com/packages/lf20_5ngs2ksb.json" }
  ],
  "files": [
    { "path": "app/lottie-ssr/page.tsx", "template": "import dynamic from 'next/dynamic';\nconst LottieClient = dynamic(() => import('@/src/ui/LottieClient'), { ssr: false });\nexport default function Page(){\n  return <LottieClient />;\n}\n" },
    { "path": "src/ui/LottieClient.tsx", "template": "'use client';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Lottie, { LottieRefCurrentProps } from 'lottie-react';\n\nfunction useReducedMotion(){\n  const [reduced, setReduced] = useState(false);\n  useEffect(()=>{\n    if (typeof window === 'undefined') return;\n    const m = window.matchMedia('(prefers-reduced-motion: reduce)');\n    const on = () => setReduced(!!m.matches);\n    on();\n    m.addEventListener?.('change', on);\n    return () => m.removeEventListener?.('change', on as any);\n  },[]);\n  return reduced;\n}\n\nexport default function LottieClient(){\n  const ref = useRef<LottieRefCurrentProps>(null);\n  const [data, setData] = useState<any | null>(null);\n  const url = process.env.NEXT_PUBLIC_LOTTIE_URL || '{{lottie_url}}';\n  const reduced = useReducedMotion();\n\n  useEffect(() => {\n    let alive = true;\n    const controller = new AbortController();\n    fetch(url, { signal: controller.signal })\n      .then(r => r.json())\n      .then(j => { if (alive) setData(j); })\n      .catch(() => {});\n    return () => { alive = false; controller.abort(); };\n  }, [url]);\n\n  return (\n    <main style={{ fontFamily: 'sans-serif', padding: 24 }}>\n      <h1>Lottie SSR Best Practices</h1>\n      <div style={{ width: 240, height: 240, border: '1px solid #ddd', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        {data ? (\n          <Lottie lottieRef={ref} animationData={data} loop autoplay={!reduced} style={{ width: 240, height: 240 }} />\n        ) : 'Loading...'}\n      </div>\n      <ul>\n        <li>dynamic import (ssr: false) でクライアント分離</li>\n        <li>prefers-reduced-motion で自動再生の抑制</li>\n        <li>fetchのAbortControllerでアンマウント時に中断</li>\n      </ul>\n    </main>\n  );\n}\n" }
  ]
}

