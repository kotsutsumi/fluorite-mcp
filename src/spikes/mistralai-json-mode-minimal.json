{
  "id": "mistralai-json-mode-minimal",
  "name": "Mistral JSON-like Output Minimal (Node)",
  "version": "1.0.0",
  "stack": ["node", "mistral"],
  "tags": ["llm", "json"],
  "description": "Ask Mistral to return JSON and best-effort parse.",
  "params": [{ "name": "app_name", "default": "mistral-json-mode" }, { "name": "mistral_model", "default": "open-mistral-7b" }],
  "files": [
    { "path": "{{app_name}}/index.mjs", "template": "import { Mistral } from '@mistralai/mistralai';\nconst client = new Mistral({ apiKey: process.env.MISTRAL_API_KEY });\nconst res = await client.chat.complete({ model: '{{mistral_model}}', messages: [{ role: 'user', content: 'Return {\\"greeting\\": \\\"hello\\\"} as JSON only.' }] });\nconst text = res.choices?.[0]?.message?.content || '';\ntry { console.log(JSON.parse(text)); } catch { console.log(text); }\n" },
    { "path": "{{app_name}}/package.json", "template": "{ \"name\": \"{{app_name}}\", \"type\": \"module\", \"private\": true, \"dependencies\": { \"@mistralai/mistralai\": \"latest\" } }\n" },
    { "path": "{{app_name}}/.env.example", "template": "MISTRAL_API_KEY=...\n" }
  ],
  "patches": []
}

