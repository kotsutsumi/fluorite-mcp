id: "webrtc-streaming-ecosystem"
name: "WebRTC / ストリーミング配信エコシステム"
homepage: "https://webrtc.org/"
summary: "WebRTC（P2P/SFU/MCU）と HLS/DASH、メディアサーバー/配信基盤、配信プラットフォームAPI、録画/変換、低遅延技術を横断。ユースケース別に選定できる実務カタログ。"
categories:
  webrtc:
    - name: "SkyWay"
      homepage: "https://skyway.ntt.com/"
      summary: "NTT Com の WebRTC PaaS。シグナリング/TURN/STUN をワンストップ提供。"
    - name: "PeerJS"
      homepage: "https://peerjs.com/"
      summary: "WebRTC のシンプルなラッパー。P2P 接続管理。"
    - name: "simple-peer"
      homepage: "https://github.com/feross/simple-peer"
      summary: "最小限の WebRTC ラッパー。Node/ブラウザ対応。"
    - name: "mediasoup"
      homepage: "https://mediasoup.org/"
      summary: "SFU 実装。大規模会議に対応。サーバ・クライアント SDK。"
    - name: "Janus Gateway"
      homepage: "https://janus.conf.meetecho.com/"
      summary: "C 実装の WebRTC ゲートウェイ。SFU/MCU 両対応。"
    - name: "Jitsi Meet / lib-jitsi-meet"
      homepage: "https://jitsi.org/"
      summary: "OSS Web 会議基盤 / JS ライブラリ。"
    - name: "WebRTC Native API"
      homepage: "https://webrtc.org/native-code/native-apis"
      summary: "ブラウザ組み込み API、C++/Go のネイティブ実装。"

  hls-dash:
    - name: "hls.js"
      homepage: "https://hlsjs.dev/"
      summary: "MSE を使ったブラウザ HLS 再生。"
    - name: "video.js"
      homepage: "https://videojs.com/"
      summary: "汎用 HTML5 プレイヤー（HLS/DASH 対応）。"
    - name: "Shaka Player"
      homepage: "https://github.com/google/shaka-player"
      summary: "Google 製の DASH/HLS プレイヤー。"
    - name: "dash.js"
      homepage: "https://github.com/Dash-Industry-Forum/dash.js"
      summary: "MPEG-DASH 再生プレイヤー。"
    - name: "Clappr"
      homepage: "https://clappr.org/"
      summary: "HLS/DASH 対応の軽量プレイヤー。"
    - name: "ExoPlayer (Android)"
      homepage: "https://exoplayer.dev/"
      summary: "Android 向け HLS/DASH プレイヤー。"
    - name: "AVPlayer (iOS)"
      homepage: "https://developer.apple.com/av-foundation/"
      summary: "iOS/macOS 向け HLS 再生。"

  media-servers:
    - name: "Kurento Media Server"
      homepage: "https://www.kurento.org/"
      summary: "WebRTC/SFU/メディア処理。フィルタ/録画など。"
    - name: "Ant Media Server"
      homepage: "https://antmedia.io/"
      summary: "WebRTC/HLS/DASH/RTMP 対応の低遅延配信。"
    - name: "OvenMediaEngine"
      homepage: "https://airensoft.gitbook.io/ovenmediaengine/"
      summary: "超低遅延 WebRTC/HLS 配信サーバー。"
    - name: "Wowza Streaming Engine"
      homepage: "https://www.wowza.com/"
      summary: "商用配信サーバー（HLS/DASH/RTMP）。"
    - name: "Red5 Pro"
      homepage: "https://www.red5.net/"
      summary: "モバイル向け低遅延配信プラットフォーム。"

  platforms-apis:
    - name: "Agora.io"
      homepage: "https://www.agora.io/"
      summary: "大規模映像/音声/データチャンネル API。"
    - name: "Twilio Video / Live"
      homepage: "https://www.twilio.com/video"
      summary: "WebRTC・HLS 両対応の配信 API。"
    - name: "AWS IVS"
      homepage: "https://aws.amazon.com/ivs/"
      summary: "HLS ベースの超低遅延配信。"
    - name: "AWS Chime SDK"
      homepage: "https://aws.amazon.com/chime/sdk/"
      summary: "音声/映像/画面共有。"
    - name: "Google Meet SDK / Zoom Video SDK"
      homepage: "https://developers.google.com/meet"
      summary: "既存会議サービス統合。"
    - name: "Mux"
      homepage: "https://www.mux.com/"
      summary: "HLS/DASH、VoD、Live 配信 API。"
    - name: "Cloudflare Stream"
      homepage: "https://www.cloudflare.com/products/cloudflare-stream/"
      summary: "動画配信/保存/CDN 統合。"

  recording-processing:
    - name: "FFmpeg"
      homepage: "https://ffmpeg.org/"
      summary: "変換/パッケージング/トランスコード。"
    - name: "GStreamer"
      homepage: "https://gstreamer.freedesktop.org/"
      summary: "メディアパイプライン構築。"
    - name: "OBS Studio"
      homepage: "https://obsproject.com/"
      summary: "配信用キャプチャ・エンコーディング。"
    - name: "Streamlink"
      homepage: "https://streamlink.github.io/"
      summary: "配信プロトコル受信。"

  low-latency-tech:
    - name: "LL-HLS"
      homepage: "https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/"
      summary: "低遅延 HLS。遅延を数秒まで短縮。"
    - name: "WebTransport / WebCodecs"
      homepage: "https://developer.chrome.com/docs/web-platform/webcodecs/"
      summary: "次世代低遅延通信/デコード API。"
    - name: "QUIC / HTTP/3"
      homepage: "https://www.rfc-editor.org/rfc/rfc9114.html"
      summary: "安定・低遅延伝送。"

bestPractices:
  - "要件整理：1対1(P2P)/小規模(メッシュ)/中〜大規模(SFU)/録画/配信/VoD を先に決める"
  - "モバイル/ブラウザのネットワーク環境に合わせ TURN/STUN/ICE を正しく構成"
  - "HLS/DASH は遅延と互換性のトレードオフを理解し、LL-HLS/Chunked CMAF を検討"
  - "スケールが必要なら SFU（mediasoup/Janus）や配信基盤（Ant Media/OvenMedia）を選定"
  - "トランスコードは FFmpeg/GStreamer をパイプライン化し、GPU/ハードウェア支援を活用"
references:
  - "WebRTC: https://webrtc.org/"
  - "mediasoup: https://mediasoup.org/"
  - "Janus: https://janus.conf.meetecho.com/"
  - "hls.js: https://hlsjs.dev/"
  - "Shaka: https://github.com/google/shaka-player"
  - "FFmpeg: https://ffmpeg.org/"
license: "Mixed (各プロジェクト準拠)"
lastReviewed: "2025-08-15"

